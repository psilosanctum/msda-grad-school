<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.1012.1128                               -->
<workbook original-version='18.1' source-build='2023.2.3 (20232.23.1012.1128)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='election_16_20' inline='true' name='federated.00paxmc0l1wmhf1e3ksqb1i360u0' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='election_16_20' name='textscan.1x57wj11acv8ks137e7i811s5gtt'>
            <connection class='textscan' directory='/Users/sethharris/Desktop/DA 6233-2023/Homework 4' filename='election_16_20.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1x57wj11acv8ks137e7i811s5gtt' name='election_16_20.csv' table='[election_16_20#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='state_name' ordinal='0' />
            <column datatype='integer' name='county_fips' ordinal='1' />
            <column datatype='string' name='county_name' ordinal='2' />
            <column datatype='integer' name='votes_gop_20' ordinal='3' />
            <column datatype='integer' name='votes_dem_20' ordinal='4' />
            <column datatype='integer' name='total_votes_20' ordinal='5' />
            <column datatype='real' name='per_gop_20' ordinal='6' />
            <column datatype='real' name='per_dem_20' ordinal='7' />
            <column datatype='real' name='per_point_diff_20' ordinal='8' />
            <column datatype='integer' name='votes_dem_16' ordinal='9' />
            <column datatype='integer' name='votes_gop_16' ordinal='10' />
            <column datatype='integer' name='total_votes_16' ordinal='11' />
            <column datatype='real' name='per_dem_16' ordinal='12' />
            <column datatype='real' name='per_gop_16' ordinal='13' />
            <column datatype='string' name='state_abbr' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1x57wj11acv8ks137e7i811s5gtt' name='election_16_20.csv' table='[election_16_20#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='state_name' ordinal='0' />
            <column datatype='integer' name='county_fips' ordinal='1' />
            <column datatype='string' name='county_name' ordinal='2' />
            <column datatype='integer' name='votes_gop_20' ordinal='3' />
            <column datatype='integer' name='votes_dem_20' ordinal='4' />
            <column datatype='integer' name='total_votes_20' ordinal='5' />
            <column datatype='real' name='per_gop_20' ordinal='6' />
            <column datatype='real' name='per_dem_20' ordinal='7' />
            <column datatype='real' name='per_point_diff_20' ordinal='8' />
            <column datatype='integer' name='votes_dem_16' ordinal='9' />
            <column datatype='integer' name='votes_gop_16' ordinal='10' />
            <column datatype='integer' name='total_votes_16' ordinal='11' />
            <column datatype='real' name='per_dem_16' ordinal='12' />
            <column datatype='real' name='per_gop_16' ordinal='13' />
            <column datatype='string' name='state_abbr' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[election_16_20.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_name]</local-name>
            <parent-name>[election_16_20.csv]</parent-name>
            <remote-alias>state_name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[election_16_20.csv_089FE6E2B3B542298302150E3C460A3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_fips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[county_fips]</local-name>
            <parent-name>[election_16_20.csv]</parent-name>
            <remote-alias>county_fips</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[election_16_20.csv_089FE6E2B3B542298302150E3C460A3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county_name]</local-name>
            <parent-name>[election_16_20.csv]</parent-name>
            <remote-alias>county_name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[election_16_20.csv_089FE6E2B3B542298302150E3C460A3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>votes_gop_20</remote-name>
            <remote-type>20</remote-type>
            <local-name>[votes_gop_20]</local-name>
            <parent-name>[election_16_20.csv]</parent-name>
            <remote-alias>votes_gop_20</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[election_16_20.csv_089FE6E2B3B542298302150E3C460A3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>votes_dem_20</remote-name>
            <remote-type>20</remote-type>
            <local-name>[votes_dem_20]</local-name>
            <parent-name>[election_16_20.csv]</parent-name>
            <remote-alias>votes_dem_20</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[election_16_20.csv_089FE6E2B3B542298302150E3C460A3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_votes_20</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_votes_20]</local-name>
            <parent-name>[election_16_20.csv]</parent-name>
            <remote-alias>total_votes_20</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[election_16_20.csv_089FE6E2B3B542298302150E3C460A3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>per_gop_20</remote-name>
            <remote-type>5</remote-type>
            <local-name>[per_gop_20]</local-name>
            <parent-name>[election_16_20.csv]</parent-name>
            <remote-alias>per_gop_20</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[election_16_20.csv_089FE6E2B3B542298302150E3C460A3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>per_dem_20</remote-name>
            <remote-type>5</remote-type>
            <local-name>[per_dem_20]</local-name>
            <parent-name>[election_16_20.csv]</parent-name>
            <remote-alias>per_dem_20</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[election_16_20.csv_089FE6E2B3B542298302150E3C460A3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>per_point_diff_20</remote-name>
            <remote-type>5</remote-type>
            <local-name>[per_point_diff_20]</local-name>
            <parent-name>[election_16_20.csv]</parent-name>
            <remote-alias>per_point_diff_20</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[election_16_20.csv_089FE6E2B3B542298302150E3C460A3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>votes_dem_16</remote-name>
            <remote-type>20</remote-type>
            <local-name>[votes_dem_16]</local-name>
            <parent-name>[election_16_20.csv]</parent-name>
            <remote-alias>votes_dem_16</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[election_16_20.csv_089FE6E2B3B542298302150E3C460A3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>votes_gop_16</remote-name>
            <remote-type>20</remote-type>
            <local-name>[votes_gop_16]</local-name>
            <parent-name>[election_16_20.csv]</parent-name>
            <remote-alias>votes_gop_16</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[election_16_20.csv_089FE6E2B3B542298302150E3C460A3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_votes_16</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_votes_16]</local-name>
            <parent-name>[election_16_20.csv]</parent-name>
            <remote-alias>total_votes_16</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[election_16_20.csv_089FE6E2B3B542298302150E3C460A3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>per_dem_16</remote-name>
            <remote-type>5</remote-type>
            <local-name>[per_dem_16]</local-name>
            <parent-name>[election_16_20.csv]</parent-name>
            <remote-alias>per_dem_16</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[election_16_20.csv_089FE6E2B3B542298302150E3C460A3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>per_gop_16</remote-name>
            <remote-type>5</remote-type>
            <local-name>[per_gop_16]</local-name>
            <parent-name>[election_16_20.csv]</parent-name>
            <remote-alias>per_gop_16</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[election_16_20.csv_089FE6E2B3B542298302150E3C460A3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_abbr</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_abbr]</local-name>
            <parent-name>[election_16_20.csv]</parent-name>
            <remote-alias>state_abbr</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[election_16_20.csv_089FE6E2B3B542298302150E3C460A3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Dem Per Increase' datatype='real' default-format='p0.00%' name='[A (copy)_610519245989724171]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([votes_dem_20]/[votes_dem_16])-1' />
      </column>
      <column caption='Trump Vote Percent' datatype='real' name='[Biden Vote Percent (copy)_610519246026866710]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Trump Votes 2020 (copy)_610519245993648141]/[total_votes_20]' />
      </column>
      <column caption='GOP Vote Percent 2016' datatype='real' default-format='p0.00%' name='[Calculation_610519245944057858]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[votes_gop_16]/[total_votes_16]' />
      </column>
      <column caption='GOP Vote Percent 2020' datatype='real' default-format='p0.00%' name='[Calculation_610519245944729604]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[votes_gop_20]/[total_votes_20]' />
      </column>
      <column caption='GOP Per Increase' datatype='real' default-format='p0.00%' name='[Total Votes 20 (copy)_610519245985468426]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Trump Votes 2020 (copy)_610519245993648141]/[votes_gop_16])-1' />
      </column>
      <column caption='Vote difference 2016 (D - G)' datatype='integer' name='[Total Votes 20 (copy)_610519245995397134]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[votes_dem_16] - [votes_gop_16]' />
      </column>
      <column caption='Biden Vote Percent' datatype='real' name='[Total Votes 20 (copy)_610519246024470547]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[votes_dem_20]/[total_votes_20]' />
      </column>
      <column caption='Vote Gop 20' datatype='integer' name='[Trump Votes 2020 (copy)_610519245993648141]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[votes_gop_20]' />
      </column>
      <column caption='Clinton Votes 2016' datatype='integer' name='[Votes Dem 16 (copy)_610519245960798214]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[votes_dem_16]' />
      </column>
      <column caption='Biden Votes 2020' datatype='integer' name='[Votes Dem 20 (copy)_610519245960953863]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[votes_dem_20]' />
      </column>
      <column caption='Trump Votes 2016' datatype='integer' name='[Votes Gop 16 (copy)_610519245961113608]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[votes_gop_16]' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='election_16_20.csv' datatype='table' name='[__tableau_internal_object_id__].[election_16_20.csv_089FE6E2B3B542298302150E3C460A3D]' role='measure' type='quantitative' />
      <column caption='Vote Difference 2020 (D - G)' datatype='integer' name='[a Vote Difference in 2016 (D - G) (copy)_610519245999751183]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[votes_dem_20] - [Trump Votes 2020 (copy)_610519245993648141]' />
      </column>
      <column caption='County Fips' datatype='integer' name='[county_fips]' role='measure' type='quantitative' />
      <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Per Dem 16' datatype='real' name='[per_dem_16]' role='measure' type='quantitative' />
      <column caption='Per Dem 20' datatype='real' name='[per_dem_20]' role='measure' type='quantitative' />
      <column caption='Per Gop 16' datatype='real' name='[per_gop_16]' role='measure' type='quantitative' />
      <column caption='Per Gop 20' datatype='real' name='[per_gop_20]' role='measure' type='quantitative' />
      <column caption='Per Point Diff 20' datatype='real' name='[per_point_diff_20]' role='measure' type='quantitative' />
      <column caption='State Abbr' datatype='string' name='[state_abbr]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State Name' datatype='string' name='[state_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Total Votes 16' datatype='integer' name='[total_votes_16]' role='measure' type='quantitative' />
      <column caption='Total Votes ' datatype='integer' name='[total_votes_20]' role='measure' type='quantitative' />
      <column caption='Votes Dem 16' datatype='integer' name='[votes_dem_16]' role='measure' type='quantitative' />
      <column caption='Votes Dem 20' datatype='integer' name='[votes_dem_20]' role='measure' type='quantitative' />
      <column caption='Votes Gop 16' datatype='integer' name='[votes_gop_16]' role='measure' type='quantitative' />
      <column caption='Trump Votes 2020' datatype='integer' name='[votes_gop_20]' role='measure' type='quantitative' />
      <column-instance column='[state_name]' derivation='None' name='[none:state_name:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='100' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:state_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='state_name' />
        <field-sort-custom-order field='county_fips' />
        <field-sort-custom-order field='county_name' />
        <field-sort-custom-order field='votes_gop_20' />
        <field-sort-custom-order field='Trump Votes 2020 (copy)_610519245993648141' />
        <field-sort-custom-order field='votes_dem_20' />
        <field-sort-custom-order field='Votes Dem 20 (copy)_610519245960953863' />
        <field-sort-custom-order field='Biden Votes 2020 (copy)_610519246005149712' />
        <field-sort-custom-order field='Biden vote percentage (copy)_610519246007439377' />
        <field-sort-custom-order field='total_votes_20' />
        <field-sort-custom-order field='Total Votes 20 (copy)_610519246030135319' />
        <field-sort-custom-order field='Total Votes 20 (copy)_610519246024470547' />
        <field-sort-custom-order field='Biden Vote Percent (copy)_610519246026866710' />
        <field-sort-custom-order field='Total Votes 20 (copy)_610519246021382162' />
        <field-sort-custom-order field='Total Votes 20 (copy)_610519245995397134' />
        <field-sort-custom-order field='a Vote Difference in 2016 (D - G) (copy)_610519245999751183' />
        <field-sort-custom-order field='Total Votes 20 (copy)_610519245985468426' />
        <field-sort-custom-order field='A (copy)_610519245989724171' />
        <field-sort-custom-order field='Total Votes 20 (copy)_610519245977145353' />
        <field-sort-custom-order field='Calculation_610519245944729604' />
        <field-sort-custom-order field='per_gop_20' />
        <field-sort-custom-order field='per_dem_20' />
        <field-sort-custom-order field='per_point_diff_20' />
        <field-sort-custom-order field='votes_dem_16' />
        <field-sort-custom-order field='Votes Dem 16 (copy)_610519245960798214' />
        <field-sort-custom-order field='votes_gop_16' />
        <field-sort-custom-order field='Votes Gop 16 (copy)_610519245961113608' />
        <field-sort-custom-order field='total_votes_16' />
        <field-sort-custom-order field='Calculation_610519245944057858' />
        <field-sort-custom-order field='per_dem_16' />
        <field-sort-custom-order field='per_gop_16' />
        <field-sort-custom-order field='state_abbr' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='election_16_20.csv' id='election_16_20.csv_089FE6E2B3B542298302150E3C460A3D'>
            <properties context=''>
              <relation connection='textscan.1x57wj11acv8ks137e7i811s5gtt' name='election_16_20.csv' table='[election_16_20#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='state_name' ordinal='0' />
                  <column datatype='integer' name='county_fips' ordinal='1' />
                  <column datatype='string' name='county_name' ordinal='2' />
                  <column datatype='integer' name='votes_gop_20' ordinal='3' />
                  <column datatype='integer' name='votes_dem_20' ordinal='4' />
                  <column datatype='integer' name='total_votes_20' ordinal='5' />
                  <column datatype='real' name='per_gop_20' ordinal='6' />
                  <column datatype='real' name='per_dem_20' ordinal='7' />
                  <column datatype='real' name='per_point_diff_20' ordinal='8' />
                  <column datatype='integer' name='votes_dem_16' ordinal='9' />
                  <column datatype='integer' name='votes_gop_16' ordinal='10' />
                  <column datatype='integer' name='total_votes_16' ordinal='11' />
                  <column datatype='real' name='per_dem_16' ordinal='12' />
                  <column datatype='real' name='per_gop_16' ordinal='13' />
                  <column datatype='string' name='state_abbr' ordinal='14' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='v2_treemap' inline='true' name='federated.1y5ztoa1obdwfx13j9znb1ukr09n' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='v2_treemap' name='textscan.0iw6xzn1wh48dt16k8wfj0i40gl5'>
            <connection class='textscan' directory='/Users/sethharris/Desktop/DA 6233-2023' filename='v2_treemap.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0iw6xzn1wh48dt16k8wfj0i40gl5' name='v2_treemap.csv' table='[v2_treemap#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='State Name' ordinal='0' />
            <column datatype='integer' name='Total Votes' ordinal='1' />
            <column datatype='real' name='Trump Vote Percentage' ordinal='2' />
            <column datatype='real' name='Biden Vote Percentage' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0iw6xzn1wh48dt16k8wfj0i40gl5' name='v2_treemap.csv' table='[v2_treemap#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='State Name' ordinal='0' />
            <column datatype='integer' name='Total Votes' ordinal='1' />
            <column datatype='real' name='Trump Vote Percentage' ordinal='2' />
            <column datatype='real' name='Biden Vote Percentage' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[v2_treemap.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State Name]</local-name>
            <parent-name>[v2_treemap.csv]</parent-name>
            <remote-alias>State Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Votes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Votes]</local-name>
            <parent-name>[v2_treemap.csv]</parent-name>
            <remote-alias>Total Votes</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Trump Vote Percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Trump Vote Percentage]</local-name>
            <parent-name>[v2_treemap.csv]</parent-name>
            <remote-alias>Trump Vote Percentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Biden Vote Percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Biden Vote Percentage]</local-name>
            <parent-name>[v2_treemap.csv]</parent-name>
            <remote-alias>Biden Vote Percentage</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[State Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='v2_treemap.csv' datatype='table' name='[__tableau_internal_object_id__].[v2_treemap.csv_97D4B53DDF4D40DFBE89A0B92350EB12]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='v2_treemap.csv' id='v2_treemap.csv_97D4B53DDF4D40DFBE89A0B92350EB12'>
            <properties context=''>
              <relation connection='textscan.0iw6xzn1wh48dt16k8wfj0i40gl5' name='v2_treemap.csv' table='[v2_treemap#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='State Name' ordinal='0' />
                  <column datatype='integer' name='Total Votes' ordinal='1' />
                  <column datatype='real' name='Trump Vote Percentage' ordinal='2' />
                  <column datatype='real' name='Biden Vote Percentage' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Difference Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='election_16_20' name='federated.00paxmc0l1wmhf1e3ksqb1i360u0' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.00paxmc0l1wmhf1e3ksqb1i360u0'>
            <column caption='Clinton Votes 2016' datatype='integer' name='[Votes Dem 16 (copy)_610519245960798214]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[votes_dem_16]' />
            </column>
            <column caption='Biden Votes 2020' datatype='integer' name='[Votes Dem 20 (copy)_610519245960953863]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[votes_dem_20]' />
            </column>
            <column caption='Trump Votes 2016' datatype='integer' name='[Votes Gop 16 (copy)_610519245961113608]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[votes_gop_16]' />
            </column>
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_name]' derivation='None' name='[none:state_name:nk]' pivot='key' type='nominal' />
            <column caption='State Name' datatype='string' name='[state_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Votes Dem 16 (copy)_610519245960798214]' derivation='Sum' name='[sum:Votes Dem 16 (copy)_610519245960798214:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Votes Dem 20 (copy)_610519245960953863]' derivation='Sum' name='[sum:Votes Dem 20 (copy)_610519245960953863:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Votes Gop 16 (copy)_610519245961113608]' derivation='Sum' name='[sum:Votes Gop 16 (copy)_610519245961113608:qk]' pivot='key' type='quantitative' />
            <column-instance column='[votes_dem_16]' derivation='Sum' name='[sum:votes_dem_16:qk]' pivot='key' type='quantitative' />
            <column-instance column='[votes_dem_20]' derivation='Sum' name='[sum:votes_dem_20:qk]' pivot='key' type='quantitative' />
            <column-instance column='[votes_gop_20]' derivation='Sum' name='[sum:votes_gop_20:qk]' pivot='key' type='quantitative' />
            <column caption='Votes Dem 16' datatype='integer' name='[votes_dem_16]' role='measure' type='quantitative' />
            <column caption='Votes Dem 20' datatype='integer' name='[votes_dem_20]' role='measure' type='quantitative' />
            <column caption='Votes Gop 16' datatype='integer' name='[votes_gop_16]' role='measure' type='quantitative' />
            <column caption='Trump Votes 2020' datatype='integer' name='[votes_gop_20]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[Latitude (generated)]</column>
            <column>[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[Longitude (generated)]' field-type='quantitative' max='-7577984.9557628315' min='-14141896.316213844' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[Latitude (generated)]' field-type='quantitative' max='6303522.2202980071' min='2591185.3688157573' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Votes Dem 16 (copy)_610519245960798214:qk]' value='#0000ff' />
            <format attr='color' scope='rows' value='#0000ff' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:votes_dem_20:qk]' field-type='quantitative' max='3000000' max-size='1' min='0' min-size='0' type='quantsize' />
            <encoding attr='size' field='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:votes_dem_16:qk]' field-type='quantitative' max='3000000' max-size='1' min='0' min-size='0' type='quantsize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:county_name:nk]' value='false' />
            <format attr='break-on-special' field='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:county_name:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:county_name:nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='size' field='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:votes_dem_20:qk]' value='votes_dem_20'>
              <formatted-text>
                <run>votes_dem_20</run>
              </formatted-text>
            </format>
            <format attr='size' field='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:votes_dem_16:qk]' value='Votes Dem 16'>
              <formatted-text>
                <run>Votes Dem 16</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='color' field='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Votes Dem 16 (copy)_610519245960798214:qk]' value='#0000ff' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:state_name:nk]' />
              <lod column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:county_name:nk]' />
              <lod column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Votes Dem 16 (copy)_610519245960798214:qk]' />
              <lod column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Votes Dem 20 (copy)_610519245960953863:qk]' />
              <lod column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Votes Gop 16 (copy)_610519245961113608:qk]' />
              <lod column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:votes_gop_20:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>County Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:county_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>State Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:state_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#4e79a7'>Clinton Votes 2016:&#9;</run>
                <run bold='true' fontcolor='#4e79a7'><![CDATA[<[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Votes Dem 16 (copy)_610519245960798214:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#4e79a7'>Biden Votes 2020:&#9;</run>
                <run bold='true' fontcolor='#4e79a7'><![CDATA[<[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Votes Dem 20 (copy)_610519245960953863:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#ff0000'>Trump Votes 2016:&#9;</run>
                <run bold='true' fontcolor='#ff0000'><![CDATA[<[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Votes Gop 16 (copy)_610519245961113608:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#ff0000'>Trump Votes 2020:&#9;</run>
                <run bold='true' fontcolor='#ff0000'><![CDATA[<[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:votes_gop_20:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7911050319671631' />
                <format attr='mark-transparency' value='178' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[Longitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:votes_dem_16:qk]' />
              <lod column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:state_name:nk]' />
              <lod column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:county_name:nk]' />
              <lod column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Votes Dem 16 (copy)_610519245960798214:qk]' />
              <lod column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Votes Dem 20 (copy)_610519245960953863:qk]' />
              <lod column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Votes Gop 16 (copy)_610519245961113608:qk]' />
              <lod column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:votes_gop_20:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>County Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:county_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>State Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:state_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#4e79a7'>Clinton Votes 2016:&#9;</run>
                <run bold='true' fontcolor='#4e79a7'><![CDATA[<[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Votes Dem 16 (copy)_610519245960798214:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#4e79a7'>Biden Votes 2020:&#9;</run>
                <run bold='true' fontcolor='#4e79a7'><![CDATA[<[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Votes Dem 20 (copy)_610519245960953863:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#ff0000'>Trump Votes 2016:&#9;</run>
                <run bold='true' fontcolor='#ff0000'><![CDATA[<[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Votes Gop 16 (copy)_610519245961113608:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#ff0000'>Trump Votes 2020:&#9;</run>
                <run bold='true' fontcolor='#ff0000'><![CDATA[<[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:votes_gop_20:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7911050319671631' />
                <format attr='mark-transparency' value='178' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[Longitude (generated)]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:votes_dem_20:qk]' />
              <lod column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:state_name:nk]' />
              <lod column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:county_name:nk]' />
              <lod column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Votes Dem 16 (copy)_610519245960798214:qk]' />
              <lod column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Votes Dem 20 (copy)_610519245960953863:qk]' />
              <lod column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Votes Gop 16 (copy)_610519245961113608:qk]' />
              <lod column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:votes_gop_20:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>County Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:county_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>State Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:state_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#4e79a7'>Clinton Votes 2016:&#9;</run>
                <run bold='true' fontcolor='#4e79a7'><![CDATA[<[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Votes Dem 16 (copy)_610519245960798214:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#4e79a7'>Biden Votes 2020:&#9;</run>
                <run bold='true' fontcolor='#4e79a7'><![CDATA[<[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Votes Dem 20 (copy)_610519245960953863:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#ff0000'>Trump Votes 2016:&#9;</run>
                <run bold='true' fontcolor='#ff0000'><![CDATA[<[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Votes Gop 16 (copy)_610519245961113608:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#ff0000'>Trump Votes 2020:&#9;</run>
                <run bold='true' fontcolor='#ff0000'><![CDATA[<[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:votes_gop_20:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4172928333282471' />
                <format attr='mark-color' value='#76b7b2' />
                <format attr='mark-transparency' value='203' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[Latitude (generated)]</rows>
        <cols>([federated.00paxmc0l1wmhf1e3ksqb1i360u0].[Longitude (generated)] + [federated.00paxmc0l1wmhf1e3ksqb1i360u0].[Longitude (generated)])</cols>
      </table>
      <simple-id uuid='{AD74C370-C905-4E5D-A21D-AC98EBA72CCF}' />
    </worksheet>
    <worksheet name='Election Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Comparing 2016 and 2020 Election Results</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='election_16_20' name='federated.00paxmc0l1wmhf1e3ksqb1i360u0' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.00paxmc0l1wmhf1e3ksqb1i360u0'>
            <column caption='GOP Vote Percent 2016' datatype='real' default-format='p0.00%' name='[Calculation_610519245944057858]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[votes_gop_16]/[total_votes_16]' />
            </column>
            <column caption='GOP Vote Percent 2020' datatype='real' default-format='p0.00%' name='[Calculation_610519245944729604]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[votes_gop_20]/[total_votes_20]' />
            </column>
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_name]' derivation='None' name='[none:state_name:nk]' pivot='key' type='nominal' />
            <column caption='State Name' datatype='string' name='[state_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_610519245944057858]' derivation='Sum' name='[sum:Calculation_610519245944057858:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_610519245944729604]' derivation='Sum' name='[sum:Calculation_610519245944729604:qk]' pivot='key' type='quantitative' />
            <column caption='Total Votes 16' datatype='integer' name='[total_votes_16]' role='measure' type='quantitative' />
            <column caption='Total Votes ' datatype='integer' name='[total_votes_20]' role='measure' type='quantitative' />
            <column caption='Votes Gop 16' datatype='integer' name='[votes_gop_16]' role='measure' type='quantitative' />
            <column caption='Trump Votes 2020' datatype='integer' name='[votes_gop_20]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:state_name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:state_name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:state_name:nk]' member='&quot;Alaska&quot;' />
                <groupfilter function='member' level='[none:state_name:nk]' member='&quot;Hawaii&quot;' />
                <groupfilter function='member' level='[none:state_name:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:state_name:nk]</column>
            <column>[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[Latitude (generated)]</column>
            <column>[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[Longitude (generated)]' field-type='quantitative' max='-4695630.0145513341' min='-20596881.870370582' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[Latitude (generated)]' field-type='quantitative' max='6550332.7572785448' min='1934619.9766058552' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Calculation_610519245944057858:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Calculation_610519245944057858:qk]' max='1.0' min='0.0' palette='red_blue_diverging_10_0' reverse='true' type='interpolated' />
            <encoding attr='color' center='0.5' field='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Calculation_610519245944729604:qk]' max='1.0' min='0.0' palette='red_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:county_name:nk]' value='false' />
            <format attr='break-on-special' field='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:county_name:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:county_name:nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Calculation_610519245944057858:qk]' value='per_gop_20'>
              <formatted-text>
                <run>per_gop_20</run>
              </formatted-text>
            </format>
            <format attr='color' field='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Calculation_610519245944729604:qk]' value='Per Gop 16'>
              <formatted-text>
                <run>Per Gop 16</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='admin-2-boundaries-bg' value='true' />
            <format attr='enabled' id='admin-2-boundaries' value='true' />
            <format attr='enabled' id='admin-2-label' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:state_name:nk]' />
              <lod column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:county_name:nk]' />
              <lod column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Calculation_610519245944729604:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='1316' />
                <format attr='maxwidth' value='1316' />
                <format attr='minheight' value='382' />
                <format attr='maxheight' value='382' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[Latitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Calculation_610519245944057858:qk]' />
              <lod column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:state_name:nk]' />
              <lod column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:county_name:nk]' />
              <lod column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Calculation_610519245944729604:qk]' />
              <geometry column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[Geometry (generated)]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[Latitude (generated)]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Calculation_610519245944729604:qk]' />
              <lod column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:state_name:nk]' />
              <lod column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:county_name:nk]' />
              <lod column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Calculation_610519245944729604:qk]' />
              <geometry column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.00paxmc0l1wmhf1e3ksqb1i360u0].[Latitude (generated)] + [federated.00paxmc0l1wmhf1e3ksqb1i360u0].[Latitude (generated)])</rows>
        <cols>[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F425A07D-3476-451F-A39D-327169F01B3A}' />
    </worksheet>
    <worksheet name='Tree Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Tree Map</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='v2_treemap' name='federated.1y5ztoa1obdwfx13j9znb1ukr09n' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1y5ztoa1obdwfx13j9znb1ukr09n'>
            <column datatype='real' name='[Biden Vote Percentage]' role='measure' type='quantitative' />
            <column datatype='string' name='[State Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Total Votes]' role='measure' type='quantitative' />
            <column datatype='real' name='[Trump Vote Percentage]' role='measure' type='quantitative' />
            <column-instance column='[State Name]' derivation='None' name='[none:State Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Biden Vote Percentage]' derivation='Sum' name='[sum:Biden Vote Percentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Votes]' derivation='Sum' name='[sum:Total Votes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Trump Vote Percentage]' derivation='Sum' name='[sum:Trump Vote Percentage:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1y5ztoa1obdwfx13j9znb1ukr09n].[sum:Biden Vote Percentage:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.1y5ztoa1obdwfx13j9znb1ukr09n].[sum:Trump Vote Percentage:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.5' field='[federated.1y5ztoa1obdwfx13j9znb1ukr09n].[sum:Biden Vote Percentage:qk]' max='0.92149999999999999' min='0.26550000000000001' palette='red_blue_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y5ztoa1obdwfx13j9znb1ukr09n].[sum:Biden Vote Percentage:qk]' value='Biden Percent Votes'>
              <formatted-text>
                <run bold='true'>Biden Percent Votes</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1y5ztoa1obdwfx13j9znb1ukr09n].[sum:Total Votes:qk]' />
              <color column='[federated.1y5ztoa1obdwfx13j9znb1ukr09n].[sum:Biden Vote Percentage:qk]' />
              <lod column='[federated.1y5ztoa1obdwfx13j9znb1ukr09n].[sum:Trump Vote Percentage:qk]' />
              <text column='[federated.1y5ztoa1obdwfx13j9znb1ukr09n].[none:State Name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>State Name: </run>
                <run bold='true'><![CDATA[<[federated.1y5ztoa1obdwfx13j9znb1ukr09n].[none:State Name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Votes: </run>
                <run><![CDATA[<[federated.1y5ztoa1obdwfx13j9znb1ukr09n].[sum:Total Votes:qk]>
]]></run>
                <run fontcolor='#4e79a7'>Biden Vote Percentage:&#9;</run>
                <run bold='true' fontcolor='#4e79a7'><![CDATA[<[federated.1y5ztoa1obdwfx13j9znb1ukr09n].[sum:Biden Vote Percentage:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#e15759'>Trump Vote Percentage: </run>
                <run bold='true' fontcolor='#e15759'><![CDATA[<[federated.1y5ztoa1obdwfx13j9znb1ukr09n].[sum:Trump Vote Percentage:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{4F1ECED5-6959-42D1-AFCD-5E2C53E296F5}' />
    </worksheet>
    <worksheet name='Vote Change'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage change in votes from 2016 to 2020 in Georgia and Arizona</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='election_16_20' name='federated.00paxmc0l1wmhf1e3ksqb1i360u0' />
          </datasources>
          <datasource-dependencies datasource='federated.00paxmc0l1wmhf1e3ksqb1i360u0'>
            <column caption='Dem Per Increase' datatype='real' default-format='p0.00%' name='[A (copy)_610519245989724171]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([votes_dem_20]/[votes_dem_16])-1' />
            </column>
            <column caption='GOP Per Increase' datatype='real' default-format='p0.00%' name='[Total Votes 20 (copy)_610519245985468426]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Trump Votes 2020 (copy)_610519245993648141]/[votes_gop_16])-1' />
            </column>
            <column caption='Vote Gop 20' datatype='integer' name='[Trump Votes 2020 (copy)_610519245993648141]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[votes_gop_20]' />
            </column>
            <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_name]' derivation='None' name='[none:state_name:nk]' pivot='key' type='nominal' />
            <column caption='State Name' datatype='string' name='[state_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[A (copy)_610519245989724171]' derivation='Sum' name='[sum:A (copy)_610519245989724171:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Votes 20 (copy)_610519245985468426]' derivation='Sum' name='[sum:Total Votes 20 (copy)_610519245985468426:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_votes_20]' derivation='Sum' name='[sum:total_votes_20:qk]' pivot='key' type='quantitative' />
            <column caption='Total Votes ' datatype='integer' name='[total_votes_20]' role='measure' type='quantitative' />
            <column caption='Votes Dem 16' datatype='integer' name='[votes_dem_16]' role='measure' type='quantitative' />
            <column caption='Votes Dem 20' datatype='integer' name='[votes_dem_20]' role='measure' type='quantitative' />
            <column caption='Votes Gop 16' datatype='integer' name='[votes_gop_16]' role='measure' type='quantitative' />
            <column caption='Trump Votes 2020' datatype='integer' name='[votes_gop_20]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:state_name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state_name:nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:state_name:nk]' member='&quot;Georgia&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:state_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Total Votes 20 (copy)_610519245985468426:qk]' scope='cols' value='GOP Vote Change' />
            <format attr='title' class='0' field='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:A (copy)_610519245989724171:qk]' scope='rows' value='Democrats Vote Change' />
          </style-rule>
        </style>
        <panes>
          <pane id='18' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:state_name:nk]' />
              <lod column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:state_name:nk]' />
              <lod column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:county_name:nk]' />
              <tooltip column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:total_votes_20:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#787878'>County Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:county_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878'>State Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:state_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#4e79a7'>Dem Per Increase:&#9;</run>
                <run bold='true' fontcolor='#4e79a7'><![CDATA[<[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:A (copy)_610519245989724171:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#ff0000'>GOP Per Increase:&#9;</run>
                <run bold='true' fontcolor='#ff0000'><![CDATA[<[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Total Votes 20 (copy)_610519245985468426:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Votes 2020:&#9;</run>
                <run bold='true'><![CDATA[<[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:total_votes_20:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.93353593349456787' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:A (copy)_610519245989724171:qk]</rows>
        <cols>[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Total Votes 20 (copy)_610519245985468426:qk]</cols>
      </table>
      <simple-id uuid='{0FCD48B3-36AF-4509-ACA8-B38B2D9160C1}' />
    </worksheet>
    <worksheet name='Vote Difference'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Vote Difference</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='election_16_20' name='federated.00paxmc0l1wmhf1e3ksqb1i360u0' />
          </datasources>
          <datasource-dependencies datasource='federated.00paxmc0l1wmhf1e3ksqb1i360u0'>
            <column caption='Vote difference 2016 (D - G)' datatype='integer' name='[Total Votes 20 (copy)_610519245995397134]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[votes_dem_16] - [votes_gop_16]' />
            </column>
            <column caption='Vote Gop 20' datatype='integer' name='[Trump Votes 2020 (copy)_610519245993648141]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[votes_gop_20]' />
            </column>
            <column caption='Vote Difference 2020 (D - G)' datatype='integer' name='[a Vote Difference in 2016 (D - G) (copy)_610519245999751183]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[votes_dem_20] - [Trump Votes 2020 (copy)_610519245993648141]' />
            </column>
            <column-instance column='[state_name]' derivation='None' name='[none:state_name:nk]' pivot='key' type='nominal' />
            <column caption='State Name' datatype='string' name='[state_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Total Votes 20 (copy)_610519245995397134]' derivation='Sum' name='[sum:Total Votes 20 (copy)_610519245995397134:qk]' pivot='key' type='quantitative' />
            <column-instance column='[a Vote Difference in 2016 (D - G) (copy)_610519245999751183]' derivation='Sum' name='[sum:a Vote Difference in 2016 (D - G) (copy)_610519245999751183:qk]' pivot='key' type='quantitative' />
            <column caption='Votes Dem 16' datatype='integer' name='[votes_dem_16]' role='measure' type='quantitative' />
            <column caption='Votes Dem 20' datatype='integer' name='[votes_dem_20]' role='measure' type='quantitative' />
            <column caption='Votes Gop 16' datatype='integer' name='[votes_gop_16]' role='measure' type='quantitative' />
            <column caption='Trump Votes 2020' datatype='integer' name='[votes_gop_20]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Total Votes 20 (copy)_610519245995397134:qk]' included-values='non-null' />
          <slices>
            <column>[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Total Votes 20 (copy)_610519245995397134:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='0' field='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:a Vote Difference in 2016 (D - G) (copy)_610519245999751183:qk]' max='510303' min='-5103803' num-steps='2' palette='red_blue_diverging_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Total Votes 20 (copy)_610519245995397134:qk]' max='3446281' min='-3446281' num-steps='2' palette='red_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Total Votes 20 (copy)_610519245995397134:qk]' value='Vote difference 2016 (D - G)'>
              <formatted-text>
                <run>Vote difference 2016 (D - G)</run>
              </formatted-text>
            </format>
            <format attr='color' field='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:a Vote Difference in 2016 (D - G) (copy)_610519245999751183:qk]' value='Vote Difference 2020 (D - G)'>
              <formatted-text>
                <run>Vote Difference 2020 (D - G)</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>State Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:state_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Vote difference 2016 (D - G):&#9;</run>
                <run bold='true'><![CDATA[<[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Total Votes 20 (copy)_610519245995397134:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Vote Difference 2020 (D - G):&#9;</run>
                <run bold='true'><![CDATA[<[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:a Vote Difference in 2016 (D - G) (copy)_610519245999751183:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Total Votes 20 (copy)_610519245995397134:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Total Votes 20 (copy)_610519245995397134:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>State Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:state_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Vote difference 2016 (D - G):&#9;</run>
                <run bold='true'><![CDATA[<[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Total Votes 20 (copy)_610519245995397134:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Vote Difference 2020 (D - G):&#9;</run>
                <run bold='true'><![CDATA[<[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:a Vote Difference in 2016 (D - G) (copy)_610519245999751183:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:a Vote Difference in 2016 (D - G) (copy)_610519245999751183:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:a Vote Difference in 2016 (D - G) (copy)_610519245999751183:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>State Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:state_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Vote difference 2016 (D - G):&#9;</run>
                <run bold='true'><![CDATA[<[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Total Votes 20 (copy)_610519245995397134:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Vote Difference 2020 (D - G):&#9;</run>
                <run bold='true'><![CDATA[<[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:a Vote Difference in 2016 (D - G) (copy)_610519245999751183:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:state_name:nk]</rows>
        <cols>([federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Total Votes 20 (copy)_610519245995397134:qk] + [federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:a Vote Difference in 2016 (D - G) (copy)_610519245999751183:qk])</cols>
      </table>
      <simple-id uuid='{11AAFE38-3753-42C4-8D9E-A04FBEA0B69B}' />
    </worksheet>
  </worksheets>
  <windows source-height='51'>
    <window class='worksheet' maximized='true' name='Election Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='235'>
            <card pane-specification-id='3' param='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Calculation_610519245944729604:qk]' type='color' />
            <card pane-specification-id='2' param='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Calculation_610519245944057858:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[:Measure Names]</field>
            <field>[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[__tableau_internal_object_id__].[cnt:election_16_20.csv_089FE6E2B3B542298302150E3C460A3D:qk]</field>
            <field>[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:county_name:nk]</field>
            <field>[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:state_abbr:nk]</field>
            <field>[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:state_name:nk]</field>
            <field>[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Calculation_610519245944057858:qk]</field>
            <field>[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:per_dem_16:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ACB91DFB-CE54-46DD-AE95-1B38AC3C89F9}' />
    </window>
    <window class='worksheet' name='Difference Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:votes_dem_16:qk]' type='size' />
            <card pane-specification-id='2' param='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:votes_dem_20:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:county_name:nk]</field>
            <field>[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:state_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D9D3F0A2-B2A6-40CA-B60F-8F9587CC9321}' />
    </window>
    <window class='worksheet' name='Vote Change'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='18' param='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:state_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:state_name:nk]</field>
            <field>[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:per_dem_16:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0B99C0DA-186B-4EEB-8DAA-127EFFD91000}' />
    </window>
    <window class='worksheet' name='Vote Difference'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:Total Votes 20 (copy)_610519245995397134:qk]' type='color' />
            <card pane-specification-id='7' param='[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:a Vote Difference in 2016 (D - G) (copy)_610519245999751183:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:county_name:nk]</field>
            <field>[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[none:state_name:nk]</field>
            <field>[federated.00paxmc0l1wmhf1e3ksqb1i360u0].[sum:a Vote Difference in 2016 (D - G) (copy)_610519245999751183:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0A95D8CD-F330-4567-8367-EECE9AE8FA5E}' />
    </window>
    <window class='worksheet' name='Tree Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1y5ztoa1obdwfx13j9znb1ukr09n].[sum:Biden Vote Percentage:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1y5ztoa1obdwfx13j9znb1ukr09n].[none:State Name:nk]</field>
            <field>[federated.1y5ztoa1obdwfx13j9znb1ukr09n].[sum:Biden Vote Percentage:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FC809E78-AFDD-452E-86D0-04891E9824B8}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Difference Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Election Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Tree Map' width='192'>
      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
      jPuDDwH4JyA2WTIrdeyOAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Vote Change' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Vote Difference' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
