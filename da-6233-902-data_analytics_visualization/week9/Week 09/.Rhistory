knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(highcharter, tidyverse)
hc1 <- mpg %>% filter(class != "minivan") %>%
hchart("scatter", hcaes(x = cty, y = hwy, group = class)) %>%
hc_legend(backgroundColor =  '#FCFFC5',
title = list(text = "Vehicle Class")) %>%
hc_tooltip(pointFormat = "City MPG: <b>{point.x}</b><br/>Highway MPG: <b>{point.y}</b><br/>")
hc1
pacman::p_load(plotly, tidyverse, gapminder, here)
data(gapminder, package = "gapminder")
gg <- ggplot(gapminder,
aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point(aes(size = pop, frame = year, ids = country)) +
scale_x_log10() +
labs(x = 'GDP per Capital',
y = 'Life Expectancy',
color = 'Continent') +
scale_color_manual(values = wesanderson::wes_palette("Moonrise3")) +
theme_minimal()
ggplotly(gg)
pacman::p_load(plotly, tidyverse, gapminder, here)
data(gapminder, package = "gapminder")
gg <- ggplot(gapminder,
aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point(aes(size = pop, frame = year, ids = country)) +
scale_x_log10() +
labs(x = 'GDP per Capital',
y = 'Life Expectancy',
color = 'Continent') +
scale_color_manual(values = wesanderson::wes_palette("Moonrise3")) +
theme_minimal()
ggplotly(gg)
base %>%
add_markers(frame = ~ year,
ids = ~ country) %>%
animation_opts(1000,
easing = "elastic",
redraw = FALSE
) %>%
animation_button( x = 1,
xanchor = "right",
y = 0,
yanchor = "bottom"
) %>%
animation_slider(currentvalue = list(prefix = "Year: ",
font = list(color = "red")
)
)
base <- gapminder %>%
plot_ly(x = ~ gdpPercap,
y = ~ lifeExp,
size = ~ pop,
color = ~ continent,
text = ~ country,
hoverinfo = "text") %>%
layout(xaxis = list(type = "log"))
base %>%
add_markers(frame = ~ year,
ids = ~ country) %>%
animation_opts(1000,
easing = "elastic",
redraw = FALSE
) %>%
animation_button( x = 1,
xanchor = "right",
y = 0,
yanchor = "bottom"
) %>%
animation_slider(currentvalue = list(prefix = "Year: ",
font = list(color = "red")
)
)
base %>%
add_markers(frame = ~ year,
ids = ~ country) %>%
animation_opts(1000,
easing = "bounce-in-out",
redraw = FALSE
) %>%
animation_button( x = 1,
xanchor = "right",
y = 0,
yanchor = "bottom"
) %>%
animation_slider(currentvalue = list(prefix = "Year: ",
font = list(color = "red")
)
)
amzn <- read_csv(here::here('Data', 'amzn_2005_2020.csv')) %>%
mutate(mktval = PRC*SHROUT*1000,
date2 = as.Date(as.character(date), format = '%Y%m%d')) %>%
filter(!is.na(mktval)) %>%
mutate(id = row_number())
head(amzn)
accumulate_by <- function(dat, var) {
var <- lazyeval::f_eval(var, dat)
lvls <- plotly:::getLevels(var)
dats <- lapply(seq_along(lvls), function(x) {
cbind(dat[var %in% lvls[seq(1, x)], ], frame = lvls[[x]])
})
dplyr::bind_rows(dats)
}
amzn2 <- amzn %>% accumulate_by(~id)
head(amzn2)
accumulate_by <- function(dat, var) {
var <- lazyeval::f_eval(var, dat)
lvls <- plotly:::getLevels(var)
dats <- lapply(seq_along(lvls), function(x) {
cbind(dat[var %in% lvls[seq(1, x)], ], frame = lvls[[x]])
})
dplyr::bind_rows(dats)
}
amzn2 <- amzn %>% accumulate_by(~id)
head(amzn2)
p <- amzn2 %>%
plot_ly(
x = ~ id,
y = ~ mktval,
frame = ~frame,
type = 'scatter',
mode = 'lines'
) %>%
layout(
xaxis = list(
title = "Date",
zeroline = F
),
yaxis = list(
title = "Market Value",
zeroline = F
)
) %>%
animation_opts(
frame = 10,
transition = 0,
redraw = FALSE
) %>%
animation_slider(
hide = T
) %>%
animation_button(
x = 1,
xanchor = "right",
y = 0,
yanchor = "bottom"
)
p
193 * (192/2)
knitr::opts_chunk$set(echo = TRUE)
# library(highcharter)
# library(tidyverse)
pacman::p_load(highcharter, tidyverse)
data(citytemp)
force(citytemp)
View(citytemp)
hc <- highchart() %>%
hc_xAxis(categories = citytemp$month) %>%
hc_add_series(name = "Tokyo", data = citytemp$tokyo) %>%
hc_add_series(name = "London", data = citytemp$london) %>%
hc_add_series(name = "NYC", data = citytemp$new_york)
hc
citytemp %>%
pivot_longer(cols = where(is.numeric))
citytemp %>%
pivot_longer(cols = where(is.numeric), names_to = "city", values_to = "temperature")
citytemp %>%
pivot_longer(cols = where(is.numeric), names_to = "city", values_to = "temperature")
