Anova(aov.ozkid2, type=3)
# post-hoc analysis
TukeyHSD(aov.ozkid1)
# assumption check
LeveneTest(aov.ozkid1)  # error says - Model must be completely crossed formula only
########################################################################
# Levene's test works only for the full model with all interaction terms
LeveneTest(aov(days ~  grade*origin, data=ozkid))  # it works with grade*origin
Anova(aov.psych3, type = 3)
## Importing Data ###
cars = read.csv("data/cars_new.csv")
cars$mpg_highway = as.numeric(cars$mpg_highway)
cars$cylinders = as.factor(cars$cylinders)
cars$origin = as.factor(cars$origin)
cars$type = as.factor(cars$type)
str(cars)
aov.cars <- aov(mpg_highway ~ cylinders + origin + type, cars)
Anova(aov.cars, type =3)
aov.cars <- aov(mpg_highway ~ cylinders + origin + type, cars)
Anova(aov.cars, type = 3)
View(cars)
aov.cars <- aov(mpg_highway ~ cylinders + origin + type, cars)
Anova(aov.cars, type = 3)
aov.cars1 <- aov(mpg_highway ~ type + cylinders + origin, cars)
Anova(aov.cars1, type = 3)
aov.cars <- aov(mpg_highway ~ cylinders + origin + type, cars)
Anova(aov.cars, type = 3)
aov.cars1 <- aov(mpg_highway ~ origin + type + cylinders, cars)
Anova(aov.cars1, type = 3)
aov.cars <- aov(mpg_highway ~ cylinders + origin + type, cars)
Anova(aov.cars, type = 3)
TukeyHSD(aov.psych4)
View(bupa)
TukeyHSD(aov.psych4)
TukeyHSD(aov.psych3)
TukeyHSD(Anova(aov.psych3))
TukeyHSD(Anova(aov.psych3, type = 3))
TukeyHSD(aov.psych3, type = 3)
TukeyHSD(aov.psych4, type = 3)
TukeyHSD(t3_anova)
t3_anova = Anova(aov.psych3, type = 3)
TukeyHSD(t3_anova)
TukeyHSD(aov.psych3)
TukeyHSD(aov.psych4)
aov.psych4 = aov(salary ~ sex + rank, psych, type=3)
summary(aov.psych4)
aov.psych4 = aov(salary ~ sex + rank, psych)
summary(aov.psych4)
TukeyHSD(aov.psych4)
ScheffeTest(aov.psych4)
TukeyHSD(aov.psych4, "sex")
TukeyHSD(aov.psych3, "sex")
TukeyHSD(aov.psych3, "sex")
?TukeyHSD
X
TukeyHSD(aov.psych4)
?TukeyHSD
TukeyHSD(aov.psych4)
TukeyHSD(aov.psych3)
?TukeyHSD
TukeyHSD(aov.psych4)
TukeyHSD(aov.psych3)
?TukeyHSD
ScheffeTest(Anova(aov.psych4, type=3))
TukeyHSD(aov.psych4)
TukeyHSD(aov.psych3)
Anova(aov.psych3, type = 3)
TukeyHSD(aov.psych4)
TukeyHSD(aov.psych3)
lm.cars <- lm(mpg_highway ~ cylinders + type, cars)
summary(lm.cars)$r.squared
aov.cars2 <- aov(mpg_highway ~ cylinders + type + cylinders * type, cars)
Anova(aov.cars2, type = 3)
aov.cars2 <- aov(mpg_highway ~ cylinders + type + type * cylinders, cars)
Anova(aov.cars2, type = 3)
aov.cars2 <- aov(mpg_highway ~ cylinders + type + type * cylinders, cars)
Anova(aov.cars2, type = 3)
aov.cars2 <- aov(mpg_highway ~ cylinders + type + cylinders * type, cars)
Anova(aov.cars2, type = 3)
aov.cars2 <- aov(mpg_highway ~ cylinders + type + cylinders * type, cars)
Anova(aov.cars2, type = 3)
lm.cars2 <- lm(mpg_highway ~ cylinders + type + cylinders * type, cars)
summary(lm.cars2)$r.squared
par(mfrow=c(2,2))
plot(aov.cars2)
TukeyHSD(aov.cars2)
TukeyHSD(aov.cars)
TukeyHSD(aov.cars2)
boxplot(mcv ~ drinkgroup, bupa,
main = "Mean Corpuscular Volume Distribution by Drink Group",
xlab = "Drink Group",
ylab = "Mean Corpuscular Volume",
col = "red",
horizontal = FALSE)
boxplot(alkphos ~ drinkgroup, bupa,
main = "Alkaline Phosphatase Distribution by Drink Group",
xlab = "Alkaline Phosphatase",
ylab = "Drink Group",
col = "red",
horizontal = FALSE)
par(mfrow=c(2,2))
plot(aov.psych4)
source("~/codebase/msda/sta-6443-902-data_analytics_algorithms/HW2.R", echo=TRUE)
library(car)
library(MASS)
library(DescTools)
setwd("/Users/c2cypher/codebase/msda/sta-6443-902-data_analytics_algorithms/HW2")
# Exercise 1
# 1a)
heart = read.csv("data/heartbpchol.csv")
heart$Cholesterol = as.numeric(heart$Cholesterol)
str(heart)
table(heart$BP_Status)
boxplot(Cholesterol ~ BP_Status, heart,
main = "Cholesterol Distribution by BP Status",
xlab = "BP Status",
ylab = "Cholesterol",
col = "red",
horizontal = FALSE)
aov.heart = aov(Cholesterol ~ BP_Status, heart)
summary(aov.heart)
lm.res = lm(Cholesterol ~ BP_Status, heart)
summary(lm.res)$r.squared
leveneTest(aov.heart)
par(mfrow=c(2,2))
plot(aov.heart)
# 1b)
ScheffeTest(aov.heart)
# Exercise 2
bupa = read.csv("data/bupa.csv")
bupa$mcv = as.numeric(bupa$mcv)
bupa$alkphos = as.numeric(bupa$alkphos)
bupa$drinkgroup = as.factor(bupa$drinkgroup)
str(bupa)
table(bupa$drinkgroup)
main = "Mean Corpuscular Volume Distribution by Drink Group",
aov.mcv <- aov(mcv ~ drinkgroup, bupa)
boxplot(mcv ~ drinkgroup, bupa,
main = "Mean Corpuscular Volume Distribution by Drink Group",
xlab = "Drink Group",
ylab = "Mean Corpuscular Volume",
col = "red",
horizontal = FALSE)
aov.mcv <- aov(mcv ~ drinkgroup, bupa)
summary(aov.mcv)
lm.res_mcv <- lm(mcv ~ drinkgroup, bupa)
summary(lm.res_mcv)$r.squared
leveneTest(aov.mcv)
par(mfrow=c(2,2))
plot(aov.mcv)
# 2b)
table(bupa$drinkgroup)
boxplot(alkphos ~ drinkgroup, bupa,
main = "Alkaline Phosphatase Distribution by Drink Group",
xlab = "Alkaline Phosphatase",
ylab = "Drink Group",
col = "red",
horizontal = FALSE)
aov.alkphos <- aov(alkphos ~ drinkgroup, bupa)
summary(aov.alkphos)
lm.alkphos <- lm(alkphos ~ drinkgroup, bupa)
summary(lm.alkphos)$r.squared
leveneTest(aov.alkphos)
par(mfrow=c(2,2))
plot(aov.alkphos)
# 2c)
ScheffeTest(aov.mcv)
ScheffeTest(aov.alkphos)
# Exercise 3
# 3a)
psych = read.csv("data/psych.csv")
psych$salary = as.numeric(psych$salary)
str(psych)
table(psych$sex); table(psych$rank)
aov.psych1 = aov(salary ~ sex * rank, psych)
summary(aov.psych1)
aov.psych2 = aov(salary ~ rank * sex, psych)
summary(aov.psych2)
Anova(aov.psych1, type = 3)
lm.psych1 = lm(salary ~ sex*rank, psych)
summary(lm.psych1)$r.squared
# 3b)
aov.psych3 = aov(salary ~ rank + sex, psych)
summary(aov.psych3)
aov.psych4 = aov(salary ~ sex + rank, psych)
summary(aov.psych4)
Anova(aov.psych3, type = 3)
lm.psych3 = lm(salary ~ rank + sex, psych)
summary(lm.psych3)$r.squared
# 3c)
par(mfrow=c(2,2))
plot(aov.psych3)
# 3d)
TukeyHSD(aov.psych4)
TukeyHSD(aov.psych3)
# Exercice 4
# 4a)
cars = read.csv("data/cars_new.csv")
cars$mpg_highway = as.numeric(cars$mpg_highway)
cars$cylinders = as.factor(cars$cylinders)
cars$origin = as.factor(cars$origin)
cars$type = as.factor(cars$type)
str(cars)
aov.cars <- aov(mpg_highway ~ cylinders + origin + type, cars)
Anova(aov.cars, type = 3)
lm.cars <- lm(mpg_highway ~ cylinders + type, cars)
summary(lm.cars)$r.squared
# 4b)
aov.cars2 <- aov(mpg_highway ~ cylinders + type + cylinders * type, cars)
Anova(aov.cars2, type = 3)
lm.cars2 <- lm(mpg_highway ~ cylinders + type + cylinders * type, cars)
summary(lm.cars2)$r.squared
par(mfrow=c(2,2))
plot(aov.cars2)
# 4c)
TukeyHSD(aov.cars2)
source("~/codebase/msda/sta-6443-902-data_analytics_algorithms/HW2.R", echo=TRUE)
leveneTest(aov.heart)
heart = read.csv("data/heartbpchol.csv")
heart$Cholesterol = as.numeric(heart$Cholesterol)
heart$BP_Status = as.factor(heart$BP_Status)
str(heart)
heart = read.csv("data/heartbpchol.csv")
heart$Cholesterol = as.numeric(heart$Cholesterol)
heart$BP_Status = as.factor(heart$BP_Status)
str(heart)
source("~/codebase/msda/sta-6443-902-data_analytics_algorithms/HW2.R", echo=TRUE)
leveneTest(aov.heart)
bupa = read.csv("data/bupa.csv")
bupa$mcv = as.numeric(bupa$mcv)
bupa$alkphos = as.numeric(bupa$alkphos)
bupa$drinkgroup = as.factor(bupa$drinkgroup)
str(bupa)
count(bupa$drinkgroup)
library(car)
library(MASS)
library(DescTools)
library(dplyr)
bupa = read.csv("data/bupa.csv")
bupa$mcv = as.numeric(bupa$mcv)
bupa$alkphos = as.numeric(bupa$alkphos)
bupa$drinkgroup = as.factor(bupa$drinkgroup)
str(bupa)
count(bupa$drinkgroup)
bupa = read.csv("data/bupa.csv")
bupa$mcv = as.numeric(bupa$mcv)
bupa$alkphos = as.numeric(bupa$alkphos)
str(bupa)
count(bupa$drinkgroup)
bupa = read.csv("data/bupa.csv")
bupa$mcv = as.numeric(bupa$mcv)
bupa$alkphos = as.numeric(bupa$alkphos)
bupa$drinkgroup = as.factor(bupa$drinkgroup)
str(bupa)
count(bupa$drinkgroup)
bupa = read.csv("data/bupa.csv")
bupa$mcv = as.numeric(bupa$mcv)
bupa$alkphos = as.numeric(bupa$alkphos)
bupa$drinkgroup = as.factor(bupa$drinkgroup)
str(bupa)
library(car)
library(MASS)
library(DescTools)
par(mfrow=c(2,2))
plot(aov.psych3)
par(mfrow=c(2,2))
plot(aov.psych4)
par(mfrow=c(2,2))
plot(aov.psych3)
par(mfrow=c(2,2))
plot(aov.psych3)
par(mfrow=c(2,2))
plot(aov.psych1)
par(mfrow=c(2,2))
plot(aov.psych3)
par(mfrow=c(2,2))
plot(aov.psych1)
par(mfrow=c(2,2))
plot(aov.psych2)
par(mfrow=c(2,2))
plot(aov.psych3)
par(mfrow=c(2,2))
plot(aov.psych1)
leveneTest(aov.psych3)
leveneTest(aov.psych1)
table(cars$type)
table(cars$origin)
table(cars$cylinders)
leveneTest(aov.mcv)
library(car)
library(MASS)
library(DescTools)
setwd("/Users/c2cypher/codebase/msda/sta-6443-902-data_analytics_algorithms/HW2")
library(car)
library(MASS)
library(DescTools)
setwd("/Users/c2cypher/codebase/msda/sta-6443-902-data_analytics_algorithms/HW2")
heart = read.csv("data/heartbpchol.csv")
heart$Cholesterol = as.numeric(heart$Cholesterol)
heart$BP_Status = as.factor(heart$BP_Status)
str(heart)
table(heart$BP_Status)
boxplot(Cholesterol ~ BP_Status, heart,
main = "Cholesterol Distribution by BP Status",
xlab = "BP Status",
ylab = "Cholesterol",
col = "red",
horizontal = FALSE)
aov.heart = aov(Cholesterol ~ BP_Status, heart)
summary(aov.heart)
lm.res = lm(Cholesterol ~ BP_Status, heart)
summary(lm.res)$r.squared
leveneTest(aov.heart)
par(mfrow=c(2,2))
plot(aov.heart)
ScheffeTest(aov.heart)
bupa = read.csv("data/bupa.csv")
bupa$mcv = as.numeric(bupa$mcv)
bupa$alkphos = as.numeric(bupa$alkphos)
bupa$drinkgroup = as.factor(bupa$drinkgroup)
str(bupa)
table(bupa$drinkgroup)
boxplot(mcv ~ drinkgroup, bupa,
main = "Mean Corpuscular Volume Distribution by Drink Group",
xlab = "Drink Group",
ylab = "Mean Corpuscular Volume",
col = "red",
horizontal = FALSE)
aov.mcv <- aov(mcv ~ drinkgroup, bupa)
summary(aov.mcv)
lm.res_mcv <- lm(mcv ~ drinkgroup, bupa)
summary(lm.res_mcv)$r.squared
leveneTest(aov.mcv)
par(mfrow=c(2,2))
plot(aov.mcv)
table(bupa$drinkgroup)
boxplot(alkphos ~ drinkgroup, bupa,
main = "Alkaline Phosphatase Distribution by Drink Group",
xlab = "Alkaline Phosphatase",
ylab = "Drink Group",
col = "red",
horizontal = FALSE)
aov.alkphos <- aov(alkphos ~ drinkgroup, bupa)
summary(aov.alkphos)
lm.alkphos <- lm(alkphos ~ drinkgroup, bupa)
summary(lm.alkphos)$r.squared
leveneTest(aov.alkphos)
par(mfrow=c(2,2))
plot(aov.alkphos)
ScheffeTest(aov.mcv)
ScheffeTest(aov.alkphos)
psych = read.csv("data/psych.csv")
psych$salary = as.numeric(psych$salary)
str(psych)
table(psych$sex); table(psych$rank)
aov.psych1 = aov(salary ~ sex * rank, psych)
summary(aov.psych1)
aov.psych2 = aov(salary ~ rank * sex, psych)
summary(aov.psych2)
Anova(aov.psych1, type = 3)
lm.psych1 = lm(salary ~ sex*rank, psych)
summary(lm.psych1)$r.squared
aov.psych3 = aov(salary ~ rank + sex, psych)
summary(aov.psych3)
aov.psych4 = aov(salary ~ sex + rank, psych)
summary(aov.psych4)
Anova(aov.psych3, type = 3)
lm.psych3 = lm(salary ~ rank + sex, psych)
summary(lm.psych3)$r.squared
par(mfrow=c(2,2))
plot(aov.psych3)
TukeyHSD(aov.psych4)
TukeyHSD(aov.psych3)
## Importing Data ###
cars = read.csv("data/cars_new.csv")
cars$mpg_highway = as.numeric(cars$mpg_highway)
cars$cylinders = as.factor(cars$cylinders)
cars$origin = as.factor(cars$origin)
cars$type = as.factor(cars$type)
str(cars)
table(cars$type)
table(cars$origin)
table(cars$cylinders)
aov.cars <- aov(mpg_highway ~ cylinders + origin + type, cars)
Anova(aov.cars, type = 3)
lm.cars <- lm(mpg_highway ~ cylinders + type, cars)
summary(lm.cars)$r.squared
aov.cars2 <- aov(mpg_highway ~ cylinders + type + cylinders * type, cars)
Anova(aov.cars2, type = 3)
lm.cars2 <- lm(mpg_highway ~ cylinders + type + cylinders * type, cars)
summary(lm.cars2)$r.squared
par(mfrow=c(2,2))
plot(aov.cars2)
TukeyHSD(aov.cars2)
source("~/codebase/msda/sta-6443-902-data_analytics_algorithms/HW2.R", echo=TRUE)
setwd("/Users/c2cypher/codebase/msda/sta-6443-902-data_analytics_algorithms")  # need to change this path
str(ozkid)
ozkid$origin = as.factor(ozkid$origin)
ozkid$sex = as.factor(ozkid$sex)
ozkid$grade = as.factor(ozkid$grade)
ozkid$type = as.factor(ozkid$type)
ozkid$days = as.numeric(ozkid$days)
str(ozkid)
table(ozkid$origin); table(ozkid$sex)  # check unbalance
###################################################
# what happens when the order of variables changes?
###################################################
summary(aov(days ~ origin + grade, data=ozkid))
summary(aov(days ~  grade + origin, data=ozkid))
anova(lm(days~origin + grade, data=ozkid))
anova(lm(days~grade + origin, data=ozkid))
###################################################
# boxplots of days by Origin
dev.new(width = 100, height = 100, unit = "px")
par(mfrow=c(2,2))
boxplot(days ~ origin,data=ozkid, main=" Days by Origin ",
xlab="origin", ylab="days")
boxplot(days ~ sex,data=ozkid, main=" Days by Sex ",
xlab="Sex", ylab="days")
boxplot(days ~ grade,data=ozkid, main=" Days by grade ",
xlab="grade", ylab="days")
boxplot(days ~ type,data=ozkid, main=" Days by type ",
xlab="type", ylab="days")
aov.ozkid1= aov(days ~  grade + origin, data=ozkid) # type 1 test
aov.ozkid2= aov(days ~  origin + grade, data=ozkid)
aov.ozkid3=Anova(aov.ozkid1, type=3)  # type 3 test from package 'car'
aov.ozkid3
Anova(aov.ozkid2, type=3)
######################################
## import data
######################################
tooth <- read.csv("datasets/toothgrowth.csv")
###################################
## change the format of "Dose"
###################################
tooth$Dose= as.factor(tooth$Dose)
str(tooth)
###################################
## balanced or unbalanced?
###################################
table(tooth$Dose); table(tooth$Supplement)
####################################
## one-way ANOVA (Toothlength ~ Dose)
####################################
#
aov.tooth= aov(Toothlength~Dose, data=tooth)   # aov() in package "car"
LeveneTest(aov.tooth)   # If levene test is significant (null: homoscedasticity), use  Welch correction
summary(aov.tooth)      # ANOVA result
plot(aov.tooth)          # diagnostics plot - Normality check
par(mfrow=c(1,1))
###################################
## balanced or unbalanced?
###################################
table(tooth$Dose); table(tooth$Supplement)
plot(aov.tooth)          # diagnostics plot - Normality check
plot(aov.tooth, 1); # display each plot separate
plot(aov.tooth, 2)
#################################################
## One-way ANOVA result in slide
##################################################
boxplot(Toothlength ~ Dose, data=tooth, main="distribution of tooth length by dose")
############################
# post-hoc test
###########################
ScheffeTest(aov.tooth)   # Scheffe test
aov.tooth2 <- aov(Toothlength ~ Dose * Supplement , data = tooth)
aov.tooth3 <- aov(Toothlength ~ Dose + Supplement + Dose*Supplement , data = tooth)
summary(aov.tooth2)
summary(aov.tooth3)
LeveneTest(aov.tooth2)  # equal variance check - error with leveneTest(aov.tooth3)
LeveneTest(aov.tooth3)
dev.new(width = 100, height = 100, unit = "px")
par(mfrow=c(2,2))   # normality check
plot(aov.tooth2)
summary(aov.tooth2)  # ANOVA result
lm.res2= lm(Toothlength ~ Dose * Supplement, data=tooth)
summary(lm.res2)$r.squared  # R-square
# post-hoc test
ScheffeTest(aov.tooth2)
TukeyHSD(aov.tooth2)
##############################
#interaction plot
##############################
# plot in lecture note
par(mfrow=c(1,1))
interaction.plot(tooth$Dose, tooth$Supplement, tooth$Toothlength,
leg.bty="o", leg.bg="beige", lwd=2,
type="b", col=c(1:2),  ### Colors for levels of trace var.
pch=c(18,24),            ### Symbols for levels of trace var.
fixed=TRUE,                    ### Order by factor order in data
xlab="Dose",
trace.label="Supplement",
ylab="Mean of tooth length",
main="Interaction plot")
interaction.plot(tooth$Dose, tooth$Supplement, tooth$Toothlength,
leg.bty="o", leg.bg="beige", lwd=2,
type="b", col=c(1:2),  ### Colors for levels of trace var.
pch=c(18,24),            ### Symbols for levels of trace var.
fixed=TRUE,                    ### Order by factor order in data
xlab="Dose",
trace.label="Supplement",
ylab="Mean of tooth length",
main="Interaction plot")
interaction.plot(tooth$Supplement, tooth$Dose, tooth$Toothlength,
leg.bty="o", leg.bg="beige", lwd=2,
type="b", col=c(1:3),  ### Colors for levels of trace var.
pch=c(18,24,22),            ### Symbols for levels of trace var.
fixed=TRUE,                    ### Order by factor order in data
xlab="Supplement",
trace.label="Dose",
ylab="Mean of tooth length",
main="Interaction plot")
