pacman::p_load(tidyverse, highcharter, tidytext, quantmod)
pacman::p_load_gh("lchiffon/wordcloud2")
d1 <- read_csv(here::here("data", "tech_stocks_csv.zip"), show_col_types = FALSE)
pacman::p_load(tidyverse, highcharter, tidytext, quantmod)
pacman::p_load_gh("lchiffon/wordcloud2")
d1 <- read_csv(here::here("/Users/c2cypher/codebase/msda/msda-grad-school/da-6233-902-data_analytics_visualization/week10/Week 10/data", "tech_stocks_csv.zip"), show_col_types = FALSE)
pacman::p_load(tidyverse, highcharter, tidytext, quantmod)
pacman::p_load_gh("lchiffon/wordcloud2")
d1 <- read_csv(here::here("/Users/c2cypher/codebase/msda/msda-grad-school/da-6233-902-data_analytics_visualization/week10/Week 10/data", "tech_stocks_csv.zip"), show_col_types = FALSE)
d1 %>%
filter(tic == "META") %>%
hchart(type = "column" ,hcaes(x = as.factor(fyear), y = oibdp)) %>%
hc_add_theme(hc_theme_economist())
d1 %>%
filter(tic == "META") %>%
hchart("column" ,hcaes(x = fyear, y = oibdp), name = "Operating Income") %>%
hc_add_theme(hc_theme_monokai())
d1 %>%
filter(tic == "META") %>%
hchart("column" ,hcaes(x = fyear, y = oibdp)) %>%
hc_tooltip(
headerFormat = "<b>Fiscal Year: {point.x} </b><a href='https://www.sec.gov/Archives/edgar/data/1326801/000132680123000013/meta-20221231.htm'>SEC </a><br>",
pointFormat = "<span style='color:#f82267'>\U25CF </span><b>Operating Profit: {point.y}</b>",
hideDelay = 1500,
useHTML = TRUE,
style = list(pointerEvents = 'auto')) %>% # I forgot to add this in the class!
hc_add_theme(hc_theme_monokai())
d1 %>%
filter(tic == "META") %>%
hchart("column", hcaes(x = as.character(fyear), y = oibdp)) %>%
hc_tooltip(
headerFormat = "<b>Fiscal Year: {point.key}</b> <br>",
pointFormat = "<b>Operating Profit: {point.y}</b>") %>%
hc_xAxis(title = list(text = "Fiscal Year",
style = list(color = "#000000", fontWeight = "bold")),
labels = list(rotation = 270)) %>%
hc_yAxis(title = list(text = "Operating Income in Million USD",
style = list(color = "#000000", fontWeight = "bold"))) %>%
hc_add_theme(hc_theme_ft())
d1 %>%
filter(tic == "META") %>%
hchart("column" ,hcaes(x = fyear, y = oibdp)) %>%
hc_tooltip(
headerFormat = "<b>Fiscal Year: {point.key}</b> <br>",
pointFormat = "<b>Operating Profit: {point.y}</b>") %>%
hc_xAxis(title = list(text = "Fiscal Year")) %>%
hc_yAxis(title = list(text = "Operating Income in Million USD")) %>%
hc_title(text = "Evil = Profitable??", align = "center") %>%
hc_subtitle(text = "Despite all the scandals, Facebook's operating income is consistently growing",
align = "center") %>%
hc_add_theme(hc_theme_monokai())
d1 %>%
filter(tic == "META") %>%
hchart("column",hcaes(x = fyear, y = oibdp)) %>%
hc_tooltip(
headerFormat = "<b>Fiscal Year: {point.key}</b> <br>",
pointFormat = '<b> Operating Profit: {point.y}</b>') %>%
hc_xAxis(title = list(text = "Fiscal Year")) %>%
hc_yAxis(title = list(text = "Operating Income in Million USD")) %>%
hc_title(text = '<span style="font-family: helvetica, arial, sans-serif;"><strong><span style="color: #3598db;">Evil = Profitable??</span></strong></span> <span>&#129297;</span>',
useHTML = TRUE, align = "center") %>%
hc_subtitle(text = "Despite all the scandals, Facebook operating income is consistently growing",
align = "center") %>%
hc_add_theme(hc_theme_monokai())
d1 %>%
filter(tic == "AAPL") %>%
mutate(leverage = (replace_na(dltt, 0) + replace_na(dlc, 0))/ at,
leverage = round(leverage, 2)) %>%
hchart("line", hcaes(x = fyear, y = leverage), name = "Leverage") %>%
hc_add_theme(hc_theme_bloom())
d1 %>%
hchart("scatter", hcaes(x = sale, y = oibdp, group = conm)) %>%
hc_add_theme(hc_theme_538())
cols <- viridisLite::viridis(10, option = "H")
cols <- substr(cols, 0, 7) # This will retain first 7 characters including the # sign.
d1 %>%
hchart("scatter", hcaes(x = sale, y = oibdp, group = conm)) %>%
hc_add_theme(hc_theme_538()) %>%
hc_colors(cols)
cols <- pals::alphabet() %>% unname()
install.packages('pals')
pacman::p_load(tidyverse, highcharter, tidytext, quantmod)
pacman::p_load_gh("lchiffon/wordcloud2")
d1 <- read_csv(here::here("/Users/c2cypher/codebase/msda/msda-grad-school/da-6233-902-data_analytics_visualization/week10/Week 10/data", "tech_stocks_csv.zip"), show_col_types = FALSE)
d1 %>%
filter(tic == "META") %>%
hchart(type = "column" ,hcaes(x = as.factor(fyear), y = oibdp)) %>%
hc_add_theme(hc_theme_economist())
d1 %>%
filter(tic == "META") %>%
hchart("column" ,hcaes(x = fyear, y = oibdp), name = "Operating Income") %>%
hc_add_theme(hc_theme_monokai())
d1 %>%
filter(tic == "META") %>%
hchart("column" ,hcaes(x = fyear, y = oibdp)) %>%
hc_tooltip(
headerFormat = "<b>Fiscal Year: {point.x} </b><a href='https://www.sec.gov/Archives/edgar/data/1326801/000132680123000013/meta-20221231.htm'>SEC </a><br>",
pointFormat = "<span style='color:#f82267'>\U25CF </span><b>Operating Profit: {point.y}</b>",
hideDelay = 1500,
useHTML = TRUE,
style = list(pointerEvents = 'auto')) %>% # I forgot to add this in the class!
hc_add_theme(hc_theme_monokai())
d1 %>%
filter(tic == "META") %>%
hchart("column", hcaes(x = as.character(fyear), y = oibdp)) %>%
hc_tooltip(
headerFormat = "<b>Fiscal Year: {point.key}</b> <br>",
pointFormat = "<b>Operating Profit: {point.y}</b>") %>%
hc_xAxis(title = list(text = "Fiscal Year",
style = list(color = "#000000", fontWeight = "bold")),
labels = list(rotation = 270)) %>%
hc_yAxis(title = list(text = "Operating Income in Million USD",
style = list(color = "#000000", fontWeight = "bold"))) %>%
hc_add_theme(hc_theme_ft())
d1 %>%
filter(tic == "META") %>%
hchart("column" ,hcaes(x = fyear, y = oibdp)) %>%
hc_tooltip(
headerFormat = "<b>Fiscal Year: {point.key}</b> <br>",
pointFormat = "<b>Operating Profit: {point.y}</b>") %>%
hc_xAxis(title = list(text = "Fiscal Year")) %>%
hc_yAxis(title = list(text = "Operating Income in Million USD")) %>%
hc_title(text = "Evil = Profitable??", align = "center") %>%
hc_subtitle(text = "Despite all the scandals, Facebook's operating income is consistently growing",
align = "center") %>%
hc_add_theme(hc_theme_monokai())
d1 %>%
filter(tic == "META") %>%
hchart("column",hcaes(x = fyear, y = oibdp)) %>%
hc_tooltip(
headerFormat = "<b>Fiscal Year: {point.key}</b> <br>",
pointFormat = '<b> Operating Profit: {point.y}</b>') %>%
hc_xAxis(title = list(text = "Fiscal Year")) %>%
hc_yAxis(title = list(text = "Operating Income in Million USD")) %>%
hc_title(text = '<span style="font-family: helvetica, arial, sans-serif;"><strong><span style="color: #3598db;">Evil = Profitable??</span></strong></span> <span>&#129297;</span>',
useHTML = TRUE, align = "center") %>%
hc_subtitle(text = "Despite all the scandals, Facebook operating income is consistently growing",
align = "center") %>%
hc_add_theme(hc_theme_monokai())
d1 %>%
filter(tic == "AAPL") %>%
mutate(leverage = (replace_na(dltt, 0) + replace_na(dlc, 0))/ at,
leverage = round(leverage, 2)) %>%
hchart("line", hcaes(x = fyear, y = leverage), name = "Leverage") %>%
hc_add_theme(hc_theme_bloom())
d1 %>%
hchart("scatter", hcaes(x = sale, y = oibdp, group = conm)) %>%
hc_add_theme(hc_theme_538())
cols <- viridisLite::viridis(10, option = "H")
cols <- substr(cols, 0, 7) # This will retain first 7 characters including the # sign.
d1 %>%
hchart("scatter", hcaes(x = sale, y = oibdp, group = conm)) %>%
hc_add_theme(hc_theme_538()) %>%
hc_colors(cols)
cols <- pals::alphabet() %>% unname()
# unname will remove the names from the vector. Highcharter throws an error if you pass a named vector with colors.
d1 %>%
hchart("scatter", hcaes(x = sale, y = oibdp, group = conm)) %>%
hc_add_theme(hc_theme_538()) %>%
hc_colors(cols)
d1 %>%
filter(tic == "AAPL") %>%
hchart("scatter", hcaes(x = sale, y = oibdp), regression = TRUE) %>%
hc_add_dependency("plugins/highcharts-regression.js") %>%
hc_add_theme(hc_theme_538())
cor_dt = d1 %>%
select(sale, oibdp, cogs, at, xrd, mkvalt, che, capx) %>%
drop_na() %>%
cor()
class(cor_dt)
cor_dt %>%
hchart() %>%
hc_colorAxis(
stops = color_stops(colors = rev(c("#000004FF",
"#56106EFF",
"#BB3754FF",
"#F98C0AFF",
"#FCFFA4FF")))
)
d2 <- d1 %>%
select(sale, oibdp, cogs, at, xrd, mkvalt, che, capx) %>%
drop_na()
d2 %>%
mutate(across(everything(), ~.x/sale)) %>%
select(-sale) %>%
cor() %>%
hchart()
d1 %>%
filter(fyear == 2021) %>%
arrange(oibdp) %>%
mutate(conm = str_to_title(conm)) %>% # Convert company names to title case
hchart("pie", hcaes(x = conm, y = oibdp))
d1 %>%
filter(fyear == 2021) %>%
arrange(oibdp) %>%
mutate(conm = str_to_title(conm)) %>%
hchart("pie", hcaes(x = conm, y = oibdp), name = "Operating Profit")
tweets = readRDS(here::here("data", "file001.rds"))
class(cor_dt)
#class(cor_dt)
str(cor_dt)
cor_dt = d1 %>%
select(sale, oibdp, cogs, at, xrd, mkvalt, che, capx) %>%
drop_na() %>%
cor()
pacman::p_load(tidyverse, highcharter, tidytext, quantmod)
pacman::p_load_gh("lchiffon/wordcloud2")
d1 <- read_csv(here::here("/Users/c2cypher/codebase/msda/msda-grad-school/da-6233-902-data_analytics_visualization/week10/Week 10/data", "tech_stocks_csv.zip"), show_col_types = FALSE)
d1 %>%
filter(tic == "META") %>%
hchart(type = "column" ,hcaes(x = as.factor(fyear), y = oibdp)) %>%
hc_add_theme(hc_theme_economist())
d1 %>%
filter(tic == "META") %>%
hchart("column" ,hcaes(x = fyear, y = oibdp), name = "Operating Income") %>%
hc_add_theme(hc_theme_monokai())
d1 %>%
filter(tic == "META") %>%
hchart("column" ,hcaes(x = fyear, y = oibdp)) %>%
hc_tooltip(
headerFormat = "<b>Fiscal Year: {point.x} </b><a href='https://www.sec.gov/Archives/edgar/data/1326801/000132680123000013/meta-20221231.htm'>SEC </a><br>",
pointFormat = "<span style='color:#f82267'>\U25CF </span><b>Operating Profit: {point.y}</b>",
hideDelay = 1500,
useHTML = TRUE,
style = list(pointerEvents = 'auto')) %>% # I forgot to add this in the class!
hc_add_theme(hc_theme_monokai())
d1 %>%
filter(tic == "META") %>%
hchart("column", hcaes(x = as.character(fyear), y = oibdp)) %>%
hc_tooltip(
headerFormat = "<b>Fiscal Year: {point.key}</b> <br>",
pointFormat = "<b>Operating Profit: {point.y}</b>") %>%
hc_xAxis(title = list(text = "Fiscal Year",
style = list(color = "#000000", fontWeight = "bold")),
labels = list(rotation = 270)) %>%
hc_yAxis(title = list(text = "Operating Income in Million USD",
style = list(color = "#000000", fontWeight = "bold"))) %>%
hc_add_theme(hc_theme_ft())
d1 %>%
filter(tic == "META") %>%
hchart("column" ,hcaes(x = fyear, y = oibdp)) %>%
hc_tooltip(
headerFormat = "<b>Fiscal Year: {point.key}</b> <br>",
pointFormat = "<b>Operating Profit: {point.y}</b>") %>%
hc_xAxis(title = list(text = "Fiscal Year")) %>%
hc_yAxis(title = list(text = "Operating Income in Million USD")) %>%
hc_title(text = "Evil = Profitable??", align = "center") %>%
hc_subtitle(text = "Despite all the scandals, Facebook's operating income is consistently growing",
align = "center") %>%
hc_add_theme(hc_theme_monokai())
d1 %>%
filter(tic == "META") %>%
hchart("column",hcaes(x = fyear, y = oibdp)) %>%
hc_tooltip(
headerFormat = "<b>Fiscal Year: {point.key}</b> <br>",
pointFormat = '<b> Operating Profit: {point.y}</b>') %>%
hc_xAxis(title = list(text = "Fiscal Year")) %>%
hc_yAxis(title = list(text = "Operating Income in Million USD")) %>%
hc_title(text = '<span style="font-family: helvetica, arial, sans-serif;"><strong><span style="color: #3598db;">Evil = Profitable??</span></strong></span> <span>&#129297;</span>',
useHTML = TRUE, align = "center") %>%
hc_subtitle(text = "Despite all the scandals, Facebook operating income is consistently growing",
align = "center") %>%
hc_add_theme(hc_theme_monokai())
d1 %>%
filter(tic == "AAPL") %>%
mutate(leverage = (replace_na(dltt, 0) + replace_na(dlc, 0))/ at,
leverage = round(leverage, 2)) %>%
hchart("line", hcaes(x = fyear, y = leverage), name = "Leverage") %>%
hc_add_theme(hc_theme_bloom())
d1 %>%
hchart("scatter", hcaes(x = sale, y = oibdp, group = conm)) %>%
hc_add_theme(hc_theme_538())
cols <- viridisLite::viridis(10, option = "H")
cols <- substr(cols, 0, 7) # This will retain first 7 characters including the # sign.
d1 %>%
hchart("scatter", hcaes(x = sale, y = oibdp, group = conm)) %>%
hc_add_theme(hc_theme_538()) %>%
hc_colors(cols)
cols <- pals::alphabet() %>% unname()
# unname will remove the names from the vector. Highcharter throws an error if you pass a named vector with colors.
d1 %>%
hchart("scatter", hcaes(x = sale, y = oibdp, group = conm)) %>%
hc_add_theme(hc_theme_538()) %>%
hc_colors(cols)
d1 %>%
filter(tic == "AAPL") %>%
hchart("scatter", hcaes(x = sale, y = oibdp), regression = TRUE) %>%
hc_add_dependency("plugins/highcharts-regression.js") %>%
hc_add_theme(hc_theme_538())
cor_dt = d1 %>%
select(sale, oibdp, cogs, at, xrd, mkvalt, che, capx) %>%
drop_na() %>%
cor()
str(cor_dt)
class(cor_dt)
cor_dt %>%
hchart() %>%
hc_colorAxis(
stops = color_stops(colors = rev(c("#000004FF",
"#56106EFF",
"#BB3754FF",
"#F98C0AFF",
"#FCFFA4FF")))
)
d2 <- d1 %>%
select(sale, oibdp, cogs, at, xrd, mkvalt, che, capx) %>%
drop_na()
d2 %>%
mutate(across(everything(), ~.x/sale)) %>%
select(-sale) %>%
cor() %>%
hchart()
d1 %>%
filter(fyear == 2021) %>%
arrange(oibdp) %>%
mutate(conm = str_to_title(conm)) %>% # Convert company names to title case
hchart("pie", hcaes(x = conm, y = oibdp))
d1 %>%
filter(fyear == 2021) %>%
arrange(oibdp) %>%
mutate(conm = str_to_title(conm)) %>%
hchart("pie", hcaes(x = conm, y = oibdp), name = "Operating Profit")
tweets = readRDS(here::here("data", "file001.rds"))
View(d1)
View(cor_dt)
View(cor_dt)
View(cor_dt)
View(cor_dt)
View(cor_dt)
View(d1)
cor_dt = d1 %>%
select(sale, oibdp, cogs, at, xrd, mkvalt, che, capx) %>%
drop_na() %>%
cor()
cor_dt
library(flexdashboard)
library(flexdashboard)
library(tidyverse)
library(highcharter)
mpg %>%
filter(!class %in% c("2seater", "minivan")) %>%
hchart("scatter", hcaes(x = displ, y = hwy, group = class)) %>%
hc_add_theme(hc_theme_538())
mpg %>%
filter(!class %in% c("2seater", "minivan")) %>%
count(class) %>%
hchart("pie", hcaes(x = class, y = n), name = "Count") %>%
hc_add_theme(hc_theme_538())
mpg %>%
select(manufacturer, model, class, hwy) %>%
head(10) %>%
knitr::kable()
library(flexdashboard)
library(tidyverse)
library(highcharter)
mpg %>%
filter(!class %in% c("2seater", "minivan")) %>%
hchart("scatter", hcaes(x = displ, y = hwy, group = class)) %>%
hc_add_theme(hc_theme_538())
mpg %>%
filter(!class %in% c("2seater", "minivan")) %>%
count(class) %>%
hchart("pie", hcaes(x = class, y = n), name = "Count") %>%
hc_add_theme(hc_theme_538())
mpg %>%
select(manufacturer, model, class, hwy) %>%
head(10) %>%
knitr::kable()
library(tidyverse)
library(olsrr)
library(car)
setwd("/Users/c2cypher/codebase/msda/msda-grad-school/sta-6443-902-data_analytics_algorithms/exam_2/HW3/")
heart <- read_csv("heart.csv", show_col_types = FALSE)
linearmodel.heart = lm(Cholesterol ~ Weight, heart)
plot(heart$Weight, heart$Cholesterol, xlab ="Weight", ylab ="Cholesterol")
abline(linearmodel.heart, col ="red")
cor(heart$Weight, heart$Cholesterol, method ="spearman")
plot(linearmodel.heart, which=c(1:4))
par(mfrow=c(2,2))
summary(linearmodel.heart)
linearmodel.heart2 = lm(Cholesterol~., data = heart)
pairs(heart)
plot(linearmodel.heart2, which=c(1:4))
par(mfrow=c(2,2))
influentialpoints <- which(cooks.distance(linearmodel.heart2) > 0.015)
heart[influentialpoints, ]
linearmodel.heart2 <- lm(Cholesterol~., data = heart[-influentialpoints, ])
summary(linearmodel.heart2)
vif(linearmodel.heart2)
stepwisemodel = ols_step_both_p(linearmodel.heart2, pent = 0.05, prem = 0.05, details = FALSE)
stepwisemodel
plot(stepwisemodel)
linearmodel.step = lm(Cholesterol~ Systolic + Diastolic, data = heart[-influentialpoints, ])
linearmodel.step = lm(Cholesterol~ Systolic + Diastolic, data = heart[-influentialpoints, ])
plot(linearmodel.step, which=c(1:4))
par(mfrow=c(2,2))
linearmodel.step = lm(Cholesterol~ Systolic + Diastolic, data = heart)
summary(linearmodel.step)
bestmodel = ols_step_best_subset(linearmodel.heart2)
bestmodel
setwd("/Users/c2cypher/codebase/msda/msda-grad-school/sta-6443-902-data_analytics_algorithms/exam_2/HW3/")
heart = read_csv("heart.csv", show_col_types = FALSE)
linearmodel.heart = lm(Cholesterol ~ Weight, heart)
plot(heart$Weight, heart$Cholesterol, xlab ="Weight", ylab ="Cholesterol")
abline(linearmodel.heart, col ="red")
setwd("/Users/c2cypher/codebase/msda/msda-grad-school/sta-6443-902-data_analytics_algorithms/datasets/")
drinking=read.csv("drinking.csv", header=TRUE)
str(drinking)
##############################################################
# scatter plot and correltion between alcohol and cirrhosis
##############################################################
# scatter plot
with(drinking, plot(alcohol, cirrhosis))
plot(drinking$alcohol, drinking$cirrhosis, xlab="alcohol", ylab="cirrhosis")
# correlation
cor(drinking$alcohol, drinking$cirrhosis, method="pearson")
cor(drinking$alcohol, drinking$cirrhosis, method="spearman")
################################
# fit linear regression
###############################
lm.drinking <- lm(cirrhosis~alcohol, data=drinking)
summary(lm.drinking)
###################################
# scatter plot - alcohol vs. cirrhosis
###################################
with(drinking, plot(alcohol, cirrhosis))
abline(lm.drinking, col="red")
################################
# diagnostics plot
###############################
par(mfrow=c(2,2))
plot(lm.drinking, which=c(1:4))    # default diagnostics plots
# manual generation of diagnostics plot
std.res=rstandard(lm.drinking)    # fitted vs. standardized residual plot
Y.hat=fitted(lm.drinking)
plot(Y.hat, std.res); abline(h=0,col="red")
#############################
# other saved results
############################
(Y.hat = fitted(lm.drinking))   #Predicted value
(residuals = residuals(lm.drinking))   # residual = Y - fitted values (Y-hat)
names(lm.drinking) # other saved results
lm.drinking$coefficients
lm.drinking$fitted.values
names(summary(lm.drinking))
summary(lm.drinking)$r.squared
#############################
# influential points
#############################
cook.d = cooks.distance(lm.drinking)
round(cook.d, 2)
plot(cook.d,col="pink", pch=19, cex=1)
text(cooks.distance(lm.drinking),labels = rownames(drinking))
###############################################
# find observation id with large cook's d
inf.id = which(cooks.distance(lm.drinking)>1)
drinking[inf.id, ]
lm.drinking2=lm(cirrhosis ~ alcohol, data=drinking[-inf.id, ])
with(drinking, plot(alcohol, cirrhosis))
abline(lm.drinking, col="red")
abline(lm.drinking2,col="blue") # without france
legend("bottomright",col=c("red","blue"),legend=c("w/ France", "w/out France"), cex=0.8, title.adj=0.15, lty=1)
# compare two regression results
summary(lm.drinking)   # w/ France
summary(lm.drinking2)  # w/out France
par(mfrow=c(2,2))
plot(lm.drinking2, which=c(1:4))    # default diagnostics plots
###############################################
# find observations id with large cook's d in the plot
# cutoff = 1   # or 4/(nrow(drinking))
plot(lm.drinking, which=4,  col = "navyblue")
View(heart)
# Exercise 1
# 1a)
heart <- read_csv("heart.csv", show_col_types = FALSE)
library(tidyverse)
library(olsrr)
library(car)
setwd("/Users/c2cypher/codebase/msda/msda-grad-school/sta-6443-902-data_analytics_algorithms/exam_2/HW3/")
# Exercise 1
# 1a)
heart <- read_csv("heart.csv", show_col_types = FALSE)
linearmodel.heart = lm(Cholesterol ~ Weight, heart)
plot(heart$Weight, heart$Cholesterol, xlab ="Weight", ylab ="Cholesterol")
abline(linearmodel.heart, col ="red")
cor(heart$Weight, heart$Cholesterol, method ="spearman")
plot(linearmodel.heart, which=c(1:4))
par(mfrow=c(2,2))
# 1b)
summary(linearmodel.heart)
# Exercise 2
linearmodel.heart2 = lm(Cholesterol~., data = heart)
pairs(heart)
plot(linearmodel.heart2, which=c(1:4))
par(mfrow=c(2,2))
influentialpoints <- which(cooks.distance(linearmodel.heart2) > 0.015)
heart[influentialpoints, ]
linearmodel.heart2 <- lm(Cholesterol~., data = heart[-influentialpoints, ])
# 2b)
summary(linearmodel.heart2)
vif(linearmodel.heart2)
# Exercise 3
# 3a)
stepwisemodel = ols_step_both_p(linearmodel.heart2, pent = 0.05, prem = 0.05, details = FALSE)
stepwisemodel
plot(stepwisemodel)
linearmodel.step = lm(Cholesterol~ Systolic + Diastolic, data = heart[-influentialpoints, ])
plot(linearmodel.step, which=c(1:4))
# Exercice 4
# 4a)
bestmodel = ols_step_best_subset(linearmodel.heart2)
bestmodel
