install.packages(“usethis”)
install.packages(usethis)
install.packages("usethis")
library(usethis)
usethis::create_github_token()
gitcreds::gitcreds_set(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)
gitcreds::gitcreds_set()
library(car)
library(DescTools)
library(MASS)
library(e1071)
library(fBasics)
library(MASS)
setwd("/Users/c2cypher/codebase/msda/msda-grad-school/sta-6443-902-data_analytics_algorithms/exam_1/exam_1_files")
birthweight = read.csv("birthweight.csv", header=TRUE)
View(birthweight)
boxplot(birthweight$Weight,
data=birthweight,
main="Weight Boxplot",
xlab="Infant Weight",
col="red",
border="black")
boxplot(birthweight$Weight,
data=birthweight,
main="Weight Boxplot",
xlab="Infant Weight",
ylab="Grams",
col="red",
border="black")
boxplot(birthweight$Weight,
data=birthweight,
main="Weight Boxplot",
xlab="Infant Weight",
ylab="Grams",
col="red",
border="black");
points(mean(birthweight$Weight, na.rm=True), col="blue")
boxplot(birthweight$Weight,
data=birthweight,
main="Weight Boxplot",
xlab="Infant Weight",
ylab="Grams",
col="red",
border="black");
points(mean(birthweight$Weight, na.rm=TRUE), col="blue")
qqnorm(birthweight$Weight,
main="Weight QQ-Plot");
qqline(birthweight$Weight, col="red")
shapiro.test(birthweight$Weight)
boxplot(birthweight$Weight,
main="Weight Boxplot",
xlab="Infant Weight",
ylab="Grams",
col="red",
border="black");
points(mean(birthweight$Weight, na.rm=TRUE), col="blue")
boxplot(Weight$MomSmoke,
data=birthweight,
main="Infant Weight by MomSmoke",
xlab="MomSmoke",
ylab="Infant Weight (grams)",
col="red",
border="black");
boxplot(Weight~MomSmoke,
data=birthweight,
main="Infant Weight by MomSmoke",
xlab="MomSmoke",
ylab="Infant Weight (grams)",
col="red",
border="black");
points(mean(Weight$MomSmoke, na.rm=TRUE), col="blue")
boxplot(Weight~MomSmoke,
data=birthweight,
main="Infant Weight by MomSmoke",
xlab="MomSmoke",
ylab="Infant Weight (grams)",
col="red",
border="black");
points(mean(Weight~MomSmoke, na.rm=TRUE), col="blue")
boxplot(Weight~MomSmoke,
data=birthweight,
main="Infant Weight by MomSmoke",
xlab="MomSmoke",
ylab="Infant Weight (grams)",
col="red",
border="black")
boxplot(Weight~MomSmoke,
data=birthweight,
main="Infant Weight by MomSmoke",
xlab="MomSmoke",
ylab="Infant Weight (grams)",
col="red",
border="black");
points(mean(birthweight$Weight, na.rm=TRUE), col="blue")
boxplot(Weight~MomSmoke,
data=birthweight,
main="Infant Weight by MomSmoke",
xlab="MomSmoke",
ylab="Infant Weight (grams)",
col="red",
border="black");
points(mean(birthweight$Weight, na.rm=TRUE), col="blue");
points(mean(birthweight$Weight, na.rm=TRUE), col="blue")
boxplot(Weight~MomSmoke,
data=birthweight,
main="Infant Weight by MomSmoke",
xlab="MomSmoke",
ylab="Infant Weight (grams)",
col="red",
border="black");
points(mean(birthweight$Weight, na.rm=TRUE), col="blue")
points(mean(birthweight$Weight, na.rm=TRUE), col="blue")
boxplot(Weight~MomSmoke,
data=birthweight,
main="Infant Weight by MomSmoke",
xlab="MomSmoke",
ylab="Infant Weight (grams)",
col="red",
border="black");
points(mean(birthweight$Weight[birthweight$MomSmoke==0], na.rm=TRUE), col="blue");
points(mean(birthweight$Weight[birthweight$MomSmoke==1], na.rm=TRUE), col="blue")
boxplot(Weight~MomSmoke,
data=birthweight,
main="Infant Weight by MomSmoke",
xlab="MomSmoke",
ylab="Infant Weight (grams)",
col="red",
border="black");
points(mean(birthweight$Weight[birthweight$MomSmoke==0], na.rm=TRUE), col="blue")
points(mean(birthweight$Weight[birthweight$MomSmoke==1], na.rm=TRUE), col="blue")
boxplot(Weight~MomSmoke,
data=birthweight,
main="Infant Weight by MomSmoke",
xlab="MomSmoke",
ylab="Infant Weight (grams)",
col="red",
border="black")
shapiro.test(birthweight$Weight[birthweight$MomSmoke==0])
shapiro.test(birthweight$Weight[birthweight$MomSmoke==1])
var.test(Weight ~ MomSmoke,
data=birthweight,
alternative="two.sided")
t.test(Weight ~ MomSmoke,
data=birthweight,
alternative="two.sided",
var.equal=TRUE)
birthweight$MomSmoke = as.factor(birthweight$MomSmoke)
birthweight$MomSmoke = as.factor(birthweight$MomSmoke)
str(birthweight)
library(car)
library(DescTools)
library(MASS)
library(e1071)
library(fBasics)
library(MASS)
setwd("/Users/c2cypher/codebase/msda/msda-grad-school/sta-6443-902-data_analytics_algorithms/exam_1/exam_1_files")
birthweight = read.csv("birthweight.csv", header=TRUE)
birthweight$Weight = as.numeric(birthweight$Weight)
birthweight$MomSmoke = as.factor(birthweight$MomSmoke)
birthweight$Black = as.factor(birthweight$Black)
birthweight$Married = as.factor(birthweight$Married)
birthweight$Boy = as.factor(birthweight$Boy)
birthweight$Ed = as.factor(birthweight$Ed)
boxplot(birthweight$Weight,
main="Weight Boxplot",
xlab="Infant Weight",
ylab="Grams",
col="red",
border="black");
points(mean(birthweight$Weight, na.rm=TRUE), col="blue")
qqnorm(birthweight$Weight,
main="Weight QQ-Plot");
qqline(birthweight$Weight, col="red")
shapiro.test(birthweight$Weight)
boxplot(Weight~MomSmoke,
data=birthweight,
main="Infant Weight by MomSmoke",
xlab="MomSmoke",
ylab="Infant Weight (grams)",
col="red",
border="black")
shapiro.test(birthweight$Weight[birthweight$MomSmoke==0])
shapiro.test(birthweight$Weight[birthweight$MomSmoke==1])
var.test(Weight ~ MomSmoke,
data=birthweight,
alternative="two.sided")
t.test(Weight ~ MomSmoke,
data=birthweight,
alternative="two.sided",
var.equal=TRUE)
birthweight$MomSmoke = as.factor(birthweight$MomSmoke)
str(birthweight)
library(car)
library(DescTools)
library(MASS)
library(e1071)
library(fBasics)
library(MASS)
setwd("/Users/c2cypher/codebase/msda/msda-grad-school/sta-6443-902-data_analytics_algorithms/exam_1/exam_1_files")
birthweight = read.csv("birthweight.csv", header=TRUE)
birthweight$Weight = as.numeric(birthweight$Weight)
birthweight$MomSmoke = as.factor(birthweight$MomSmoke)
birthweight$Black = as.factor(birthweight$Black)
birthweight$Married = as.factor(birthweight$Married)
birthweight$Boy = as.factor(birthweight$Boy)
birthweight$Ed = as.factor(birthweight$Ed)
str(birthweight)
boxplot(birthweight$Weight,
main="Weight Boxplot",
xlab="Infant Weight",
ylab="Grams",
col="red",
border="black");
points(mean(birthweight$Weight, na.rm=TRUE), col="blue")
qqnorm(birthweight$Weight,
main="Weight QQ-Plot");
qqline(birthweight$Weight, col="red")
shapiro.test(birthweight$Weight)
boxplot(Weight~MomSmoke,
data=birthweight,
main="Infant Weight by MomSmoke",
xlab="MomSmoke",
ylab="Infant Weight (grams)",
col="red",
border="black")
shapiro.test(birthweight$Weight[birthweight$MomSmoke==0])
shapiro.test(birthweight$Weight[birthweight$MomSmoke==1])
var.test(Weight ~ MomSmoke,
data=birthweight,
alternative="two.sided")
t.test(Weight ~ MomSmoke,
data=birthweight,
alternative="two.sided",
var.equal=TRUE)
table(birthweight$MomSmoke)
table(birthweight$MomSmoke)
aov.momsmoke = aov(Weight~MomSmoke,
data=birthweight)
table(birthweight$MomSmoke)
aov.momsmoke = aov(Weight~MomSmoke,
data=birthweight)
LeveneTest(aov.momsmoke)
summary(aov.momsmoke)
table(birthweight$MomSmoke)
aov.momsmoke = aov(Weight~MomSmoke,
data=birthweight)
LeveneTest(aov.momsmoke)
summary(aov.momsmoke)
ScheffeTest(aov.momsmoke)
lm.momsmoke = lm(Weight~MomSmoke,
data=birthweight)
anova(lm.momsmoke)
summary(lm.momsmoke)$r.squared
lm.momsmoke = lm(Weight~MomSmoke,
data=birthweight)
anova(lm.momsmoke)
summary(lm.momsmoke)$r.squared
lm.momsmoke = lm(Weight~MomSmoke,
data=birthweight)
summary(lm.momsmoke)$r.squared
table(birthweight$MomSmoke)
aov.momsmoke = aov(Weight~MomSmoke,
data=birthweight)
LeveneTest(aov.momsmoke)
summary(aov.momsmoke)
summary(aov.momsmoke)
ScheffeTest(aov.momsmoke)
aov.momsmoke = aov(Weight~MomSmoke,
data=birthweight)
LeveneTest(aov.momsmoke)
summary(aov.momsmoke)
ScheffeTest(aov.momsmoke)
lm.momsmoke = lm(Weight~MomSmoke,
data=birthweight)
summary(lm.momsmoke)$r.squared
par(mfrow=c(2,2))
plot(aov.momsmoke)
table(birthweight$Black)
table(birthweight$Married)
table(birthweight$Boy)
table(birthweight$MomSmoke)
table(birthweight$Ed)
fullmodel = aov(Weight ~ Black + Married + Boy + MomSmoke + Ed,
data=birthweight)
Anova(fullmodel, type=3)
full_model = aov(Weight ~ Black + Married + Boy + MomSmoke + Ed,
data=birthweight)
Anova(full_model, type=3)
temp_model_1 = aov(Weight ~ Black + Married + Boy + MomSmoke,
data=birthweight)
Anova(temp_model_1, type=3)
full_model = aov(Weight ~ Black + Married + Boy + MomSmoke + Ed,
data=birthweight)
Anova(full_model, type=3)
temp_model_1 = aov(Weight ~ Black + Married + Boy + MomSmoke,
data=birthweight)
Anova(temp_model_1, type=3)
temp_model_2 = aov(Weight ~ Black + Boy + MomSmoke,
data=birthweight)
Anova(temp_model_2, type=3)
full_model = aov(Weight ~ Black + Married + Boy + MomSmoke + Ed,
data=birthweight)
Anova(full_model, type=3)
temp_model_1 = aov(Weight ~ Black + Married + Boy + MomSmoke,
data=birthweight)
Anova(temp_model_1, type=3)
temp_model_2 = aov(Weight ~ Black + Boy + MomSmoke,
data=birthweight)
Anova(temp_model_2, type=3)
temp_model_3 = aov(Weight ~ Black + MomSmoke,
data=birthweight)
Anova(temp_model_3, type=3)
full_model = aov(Weight ~ Black + Married + Boy + MomSmoke + Ed,
data=birthweight)
Anova(full_model, type=3)
temp_model_1 = aov(Weight ~ Black + Married + Boy + MomSmoke,
data=birthweight)
Anova(temp_model_1, type=3)
temp_model_2 = aov(Weight ~ Black + Boy + MomSmoke,
data=birthweight)
Anova(temp_model_2, type=3)
temp_model_3 = aov(Weight ~ Black + MomSmoke,
data=birthweight)
Anova(temp_model_3, type=3)
temp_model_4 = aov(Weight ~ Black + MomSmoke + Black*MomSmoke,
data=birthweight)
Anova(temp_model_4, type=3)
final_model = aov(Weight ~ Black + MomSmoke,
data=birthweight)
Anova(final_model, type=3)
par(mfrow=c(2,2))
plot(full_model)
par(mfrow=c(2,2))
plot(Anova(final_model, type=3))
par(mfrow=c(2,2))
plot(full_model)
par(mfrow=c(2,2))
plot(full_model)
final_model = aov(Weight ~ Black + MomSmoke,
data=birthweight)
lm.final_model = lm(Weight ~ Black + MomSmoke,
data=birthweight)
summary(lm.momsmoke)$r.squared
final_model = aov(Weight ~ Black + MomSmoke,
data=birthweight)
lm.final_model = lm(Weight ~ Black + MomSmoke,
data=birthweight)
summary(lm.final_model)$r.squared
lm.final_model = lm(Weight ~ Black + MomSmoke,
data=birthweight)
summary(lm.final_model)$r.squared
ScheffeTest(lm.final_model)
full_model = aov(Weight ~ Black + Married + Boy + MomSmoke + Ed,
data=birthweight)
Anova(full_model, type=3)
temp_model_1 = aov(Weight ~ Black + Married + Boy + MomSmoke,
data=birthweight)
Anova(temp_model_1, type=3)
temp_model_2 = aov(Weight ~ Black + Boy + MomSmoke,
data=birthweight)
Anova(temp_model_2, type=3)
temp_model_3 = aov(Weight ~ Black + MomSmoke,
data=birthweight)
Anova(temp_model_3, type=3)
temp_model_4 = aov(Weight ~ Black + MomSmoke + Black*MomSmoke,
data=birthweight)
Anova(temp_model_4, type=3)
final_model = aov(Weight ~ Black + MomSmoke,
data=birthweight)
Anova(final_model, type=3)
ScheffeTest(final_model)
final_model = aov(Weight ~ Black + MomSmoke,
data=birthweight)
Anova(final_model, type=3)
ScheffeTest(final_model)
library(car)
library(DescTools)
library(MASS)
library(e1071)
library(fBasics)
library(MASS)
setwd("/Users/c2cypher/codebase/msda/msda-grad-school/sta-6443-902-data_analytics_algorithms/exam_1/exam_1_files")
birthweight = read.csv("birthweight.csv", header=TRUE)
birthweight$Weight = as.numeric(birthweight$Weight)
birthweight$MomSmoke = as.factor(birthweight$MomSmoke)
birthweight$Black = as.factor(birthweight$Black)
birthweight$Married = as.factor(birthweight$Married)
birthweight$Boy = as.factor(birthweight$Boy)
birthweight$Ed = as.factor(birthweight$Ed)
str(birthweight)
# 1a)
boxplot(birthweight$Weight,
main="Weight Boxplot",
xlab="Infant Weight",
ylab="Grams",
col="red",
border="black");
points(mean(birthweight$Weight, na.rm=TRUE), col="blue")
ScheffeTest(final_model)
library(car)
library(DescTools)
library(MASS)
library(e1071)
library(fBasics)
library(MASS)
setwd("/Users/c2cypher/codebase/msda/msda-grad-school/sta-6443-902-data_analytics_algorithms/exam_1/exam_1_files")
birthweight = read.csv("birthweight.csv", header=TRUE)
birthweight$Weight = as.numeric(birthweight$Weight)
birthweight$MomSmoke = as.factor(birthweight$MomSmoke)
birthweight$Black = as.factor(birthweight$Black)
birthweight$Married = as.factor(birthweight$Married)
birthweight$Boy = as.factor(birthweight$Boy)
birthweight$Ed = as.factor(birthweight$Ed)
str(birthweight)
# Exercise 1
# 1a)
boxplot(birthweight$Weight,
main="Weight Boxplot",
xlab="Infant Weight",
ylab="Grams",
col="red",
border="black");
points(mean(birthweight$Weight, na.rm=TRUE), col="blue")
qqnorm(birthweight$Weight,
main="Weight QQ-Plot");
qqline(birthweight$Weight, col="red")
shapiro.test(birthweight$Weight)
# 1b)
boxplot(Weight~MomSmoke,
data=birthweight,
main="Infant Weight by MomSmoke",
xlab="MomSmoke",
ylab="Infant Weight (grams)",
col="red",
border="black")
# 1c)
shapiro.test(birthweight$Weight[birthweight$MomSmoke==0])
shapiro.test(birthweight$Weight[birthweight$MomSmoke==1])
# Exercise 2
var.test(Weight ~ MomSmoke,
data=birthweight,
alternative="two.sided")
t.test(Weight ~ MomSmoke,
data=birthweight,
alternative="two.sided",
var.equal=TRUE)
# Exercise 3
table(birthweight$MomSmoke)
# 3a)
aov.momsmoke = aov(Weight~MomSmoke,
data=birthweight)
LeveneTest(aov.momsmoke)
# 3b)
summary(aov.momsmoke)
ScheffeTest(aov.momsmoke)
lm.momsmoke = lm(Weight~MomSmoke,
data=birthweight)
summary(lm.momsmoke)$r.squared
par(mfrow=c(2,2))
plot(aov.momsmoke)
# Exercise 4
# 4a)
full_model = aov(Weight ~ Black + Married + Boy + MomSmoke + Ed,
data=birthweight)
Anova(full_model, type=3)
temp_model_1 = aov(Weight ~ Black + Married + Boy + MomSmoke,
data=birthweight)
Anova(temp_model_1, type=3)
temp_model_2 = aov(Weight ~ Black + Boy + MomSmoke,
data=birthweight)
Anova(temp_model_2, type=3)
temp_model_3 = aov(Weight ~ Black + MomSmoke,
data=birthweight)
Anova(temp_model_3, type=3)
temp_model_4 = aov(Weight ~ Black + MomSmoke + Black*MomSmoke,
data=birthweight)
Anova(temp_model_4, type=3)
final_model = aov(Weight ~ Black + MomSmoke,
data=birthweight)
Anova(final_model, type=3)
# 4b)
lm.final_model = lm(Weight ~ Black + MomSmoke,
data=birthweight)
summary(lm.final_model)$r.squared
par(mfrow=c(2,2))
plot(full_model)
# 4c)
final_model = aov(Weight ~ Black + MomSmoke,
data=birthweight)
Anova(final_model, type=3)
ScheffeTest(final_model)
